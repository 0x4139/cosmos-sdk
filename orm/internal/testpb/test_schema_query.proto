// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.
syntax = "proto3";
package testpb;

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "testpb/test_schema.proto";

// TestSchemaQueryService queries the state of the tables specified by testpb/test_schema.proto.
service TestSchemaQueryService {
  // ExampleTable queries the ExampleTable table by its primary key.
  rpc ExampleTable(ExampleTableRequest) returns (ExampleTableResponse) {
    option (google.api.http) = {
      get: "/testpb/example_tables/{u32}/{i64}/{str}"
    };
  }
  // ExampleTableByU64Str queries the ExampleTable table by its U64Str index
  rpc ExampleTableByU64Str(ExampleTableByU64StrRequest) returns (ExampleTableByU64StrResponse) {
    option (google.api.http) = {
      get: "/testpb/example_tables.u64-str/{u64}/{str}"
    };
  }
  // ExampleTables queries the ExampleTable table using the primary key index.
  rpc ExampleTables(ExampleTablesRequest) returns (ExampleTablesResponse) {
    option (google.api.http) = {
      get: "/testpb/example_tables"
    };
  }
  // ExampleTablesByU64Str queries the ExampleTable table using the primary key index.
  rpc ExampleTablesByU64Str(ExampleTablesByU64StrRequest) returns (ExampleTablesByU64StrResponse) {
    option (google.api.http) = {
      get: "/testpb/example_tables-by-u64-str"
    };
  }
  // ExampleTablesByStrU32 queries the ExampleTable table using the primary key index.
  rpc ExampleTablesByStrU32(ExampleTablesByStrU32Request) returns (ExampleTablesByStrU32Response) {
    option (google.api.http) = {
      get: "/testpb/example_tables-by-str-u32"
    };
  }
  // ExampleTablesByBzStr queries the ExampleTable table using the primary key index.
  rpc ExampleTablesByBzStr(ExampleTablesByBzStrRequest) returns (ExampleTablesByBzStrResponse) {
    option (google.api.http) = {
      get: "/testpb/example_tables-by-bz-str"
    };
  }
  // ExampleAutoIncrementTable queries the ExampleAutoIncrementTable table by its primary key.
  rpc ExampleAutoIncrementTable(ExampleAutoIncrementTableRequest) returns (ExampleAutoIncrementTableResponse) {
    option (google.api.http) = {
      get: "/testpb/example_auto_increment_tables/{id}"
    };
  }
  // ExampleAutoIncrementTableByX queries the ExampleAutoIncrementTable table by its X index
  rpc ExampleAutoIncrementTableByX(ExampleAutoIncrementTableByXRequest) returns (ExampleAutoIncrementTableByXResponse) {
    option (google.api.http) = {
      get: "/testpb/example_auto_increment_tables.x/{x}"
    };
  }
  // ExampleAutoIncrementTables queries the ExampleAutoIncrementTable table using the primary key index.
  rpc ExampleAutoIncrementTables(ExampleAutoIncrementTablesRequest) returns (ExampleAutoIncrementTablesResponse) {
    option (google.api.http) = {
      get: "/testpb/example_auto_increment_tables"
    };
  }
  // ExampleAutoIncrementTablesByX queries the ExampleAutoIncrementTable table using the primary key index.
  rpc ExampleAutoIncrementTablesByX(ExampleAutoIncrementTablesByXRequest) returns (ExampleAutoIncrementTablesByXResponse) {
    option (google.api.http) = {
      get: "/testpb/example_auto_increment_tables-by-x"
    };
  }
  // ExampleSingleton queries the ExampleSingleton singleton.
  rpc ExampleSingleton (ExampleSingletonRequest) returns (ExampleSingletonResponse) {}
  // ExampleTimestamp queries the ExampleTimestamp table by its primary key.
  rpc ExampleTimestamp(ExampleTimestampRequest) returns (ExampleTimestampResponse) {
    option (google.api.http) = {
      get: "/testpb/example_timestamps/{id}"
    };
  }
  // ExampleTimestamps queries the ExampleTimestamp table using the primary key index.
  rpc ExampleTimestamps(ExampleTimestampsRequest) returns (ExampleTimestampsResponse) {
    option (google.api.http) = {
      get: "/testpb/example_timestamps"
    };
  }
  // ExampleTimestampsByTs queries the ExampleTimestamp table using the primary key index.
  rpc ExampleTimestampsByTs(ExampleTimestampsByTsRequest) returns (ExampleTimestampsByTsResponse) {
    option (google.api.http) = {
      get: "/testpb/example_timestamps-by-ts"
    };
  }
  // SimpleExample queries the SimpleExample table by its primary key.
  rpc SimpleExample(SimpleExampleRequest) returns (SimpleExampleResponse) {
    option (google.api.http) = {
      get: "/testpb/simple_examples/{name}"
    };
  }
  // SimpleExampleByUnique queries the SimpleExample table by its Unique index
  rpc SimpleExampleByUnique(SimpleExampleByUniqueRequest) returns (SimpleExampleByUniqueResponse) {
    option (google.api.http) = {
      get: "/testpb/simple_examples.unique/{unique}"
    };
  }
  // SimpleExamples queries the SimpleExample table using the primary key index.
  rpc SimpleExamples(SimpleExamplesRequest) returns (SimpleExamplesResponse) {
    option (google.api.http) = {
      get: "/testpb/simple_examples"
    };
  }
  // SimpleExamplesByUnique queries the SimpleExample table using the primary key index.
  rpc SimpleExamplesByUnique(SimpleExamplesByUniqueRequest) returns (SimpleExamplesByUniqueResponse) {
    option (google.api.http) = {
      get: "/testpb/simple_examples-by-unique"
    };
  }
  // ExampleAutoIncFieldName queries the ExampleAutoIncFieldName table by its primary key.
  rpc ExampleAutoIncFieldName(ExampleAutoIncFieldNameRequest) returns (ExampleAutoIncFieldNameResponse) {
    option (google.api.http) = {
      get: "/testpb/example_auto_inc_field_names/{foo}"
    };
  }
  // ExampleAutoIncFieldNames queries the ExampleAutoIncFieldName table using the primary key index.
  rpc ExampleAutoIncFieldNames(ExampleAutoIncFieldNamesRequest) returns (ExampleAutoIncFieldNamesResponse) {
    option (google.api.http) = {
      get: "/testpb/example_auto_inc_field_names"
    };
  }
}

// ExampleTableRequest is the TestSchemaQuery/ExampleTableRequest request type.
message ExampleTableRequest {
  // u32 specifies the value of the u32 field in the primary key.
  uint32 u32 = 1;
  // i64 specifies the value of the i64 field in the primary key.
  int64 i64 = 2;
  // str specifies the value of the str field in the primary key.
  string str = 3;
}

// ExampleTableResponse is the TestSchemaQuery/ExampleTableResponse response type.
message ExampleTableResponse {
  // value is the response value.
  ExampleTable value = 1;
}

// ExampleTableByU64StrRequest is the TestSchemaQuery/ExampleTableByU64StrRequest request type.
message ExampleTableByU64StrRequest {
  uint64 u64 = 1;
  string str = 2;
}

// ExampleTableByU64StrResponse is the TestSchemaQuery/ExampleTableByU64StrResponse response type.
message ExampleTableByU64StrResponse {
  ExampleTable value = 1;
}

// ExampleTablesRequest is the TestSchemaQuery/ExampleTablesRequest request type.
message ExampleTablesRequest {
  // u32 is the value of the u32 field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional uint32 u32 = 1;
  // i64 is the value of the i64 field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional int64 i64 = 2;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// ExampleTablesResponse is the TestSchemaQuery/ExampleTablesResponse response type.
message ExampleTablesResponse {
  // values are the results of the query.
  repeated ExampleTable values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleTablesByU64StrRequest is the TestSchemaQuery/ExampleTablesByU64StrRequest request type.
message ExampleTablesByU64StrRequest {
  // u64 is the value of the u64 field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional uint64 u64 = 1;
  // str is the value of the str field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string str = 2;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// ExampleTablesByU64StrResponse is the TestSchemaQuery/ExampleTablesByU64StrResponse response type.
message ExampleTablesByU64StrResponse {
  // values are the results of the query.
  repeated ExampleTable values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleTablesByStrU32Request is the TestSchemaQuery/ExampleTablesByStrU32Request request type.
message ExampleTablesByStrU32Request {
  // str is the value of the str field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string str = 1;
  // u32 is the value of the u32 field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional uint32 u32 = 2;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// ExampleTablesByStrU32Response is the TestSchemaQuery/ExampleTablesByStrU32Response response type.
message ExampleTablesByStrU32Response {
  // values are the results of the query.
  repeated ExampleTable values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleTablesByBzStrRequest is the TestSchemaQuery/ExampleTablesByBzStrRequest request type.
message ExampleTablesByBzStrRequest {
  // bz is the value of the bz field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional bytes bz = 1;
  // str is the value of the str field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string str = 2;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// ExampleTablesByBzStrResponse is the TestSchemaQuery/ExampleTablesByBzStrResponse response type.
message ExampleTablesByBzStrResponse {
  // values are the results of the query.
  repeated ExampleTable values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleAutoIncrementTableRequest is the TestSchemaQuery/ExampleAutoIncrementTableRequest request type.
message ExampleAutoIncrementTableRequest {
  // id specifies the value of the id field in the primary key.
  uint64 id = 1;
}

// ExampleAutoIncrementTableResponse is the TestSchemaQuery/ExampleAutoIncrementTableResponse response type.
message ExampleAutoIncrementTableResponse {
  // value is the response value.
  ExampleAutoIncrementTable value = 1;
}

// ExampleAutoIncrementTableByXRequest is the TestSchemaQuery/ExampleAutoIncrementTableByXRequest request type.
message ExampleAutoIncrementTableByXRequest {
  string x = 1;
}

// ExampleAutoIncrementTableByXResponse is the TestSchemaQuery/ExampleAutoIncrementTableByXResponse response type.
message ExampleAutoIncrementTableByXResponse {
  ExampleAutoIncrementTable value = 1;
}

// ExampleAutoIncrementTablesRequest is the TestSchemaQuery/ExampleAutoIncrementTablesRequest request type.
message ExampleAutoIncrementTablesRequest {
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// ExampleAutoIncrementTablesResponse is the TestSchemaQuery/ExampleAutoIncrementTablesResponse response type.
message ExampleAutoIncrementTablesResponse {
  // values are the results of the query.
  repeated ExampleAutoIncrementTable values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleAutoIncrementTablesByXRequest is the TestSchemaQuery/ExampleAutoIncrementTablesByXRequest request type.
message ExampleAutoIncrementTablesByXRequest {
  // x is the value of the x field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string x = 1;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// ExampleAutoIncrementTablesByXResponse is the TestSchemaQuery/ExampleAutoIncrementTablesByXResponse response type.
message ExampleAutoIncrementTablesByXResponse {
  // values are the results of the query.
  repeated ExampleAutoIncrementTable values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleSingletonRequest is the TestSchemaQuery/ExampleSingletonRequest request type.
message ExampleSingletonRequest {
}

// ExampleSingletonResponse is the TestSchemaQuery/ExampleSingletonResponse request type.
message ExampleSingletonResponse {
  ExampleSingleton value = 1;
}

// ExampleTimestampRequest is the TestSchemaQuery/ExampleTimestampRequest request type.
message ExampleTimestampRequest {
  // id specifies the value of the id field in the primary key.
  uint64 id = 1;
}

// ExampleTimestampResponse is the TestSchemaQuery/ExampleTimestampResponse response type.
message ExampleTimestampResponse {
  // value is the response value.
  ExampleTimestamp value = 1;
}

// ExampleTimestampsRequest is the TestSchemaQuery/ExampleTimestampsRequest request type.
message ExampleTimestampsRequest {
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// ExampleTimestampsResponse is the TestSchemaQuery/ExampleTimestampsResponse response type.
message ExampleTimestampsResponse {
  // values are the results of the query.
  repeated ExampleTimestamp values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleTimestampsByTsRequest is the TestSchemaQuery/ExampleTimestampsByTsRequest request type.
message ExampleTimestampsByTsRequest {
  // ts is the value of the ts field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional google.protobuf.Timestamp ts = 1;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// ExampleTimestampsByTsResponse is the TestSchemaQuery/ExampleTimestampsByTsResponse response type.
message ExampleTimestampsByTsResponse {
  // values are the results of the query.
  repeated ExampleTimestamp values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// SimpleExampleRequest is the TestSchemaQuery/SimpleExampleRequest request type.
message SimpleExampleRequest {
  // name specifies the value of the name field in the primary key.
  string name = 1;
}

// SimpleExampleResponse is the TestSchemaQuery/SimpleExampleResponse response type.
message SimpleExampleResponse {
  // value is the response value.
  SimpleExample value = 1;
}

// SimpleExampleByUniqueRequest is the TestSchemaQuery/SimpleExampleByUniqueRequest request type.
message SimpleExampleByUniqueRequest {
  string unique = 1;
}

// SimpleExampleByUniqueResponse is the TestSchemaQuery/SimpleExampleByUniqueResponse response type.
message SimpleExampleByUniqueResponse {
  SimpleExample value = 1;
}

// SimpleExamplesRequest is the TestSchemaQuery/SimpleExamplesRequest request type.
message SimpleExamplesRequest {
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// SimpleExamplesResponse is the TestSchemaQuery/SimpleExamplesResponse response type.
message SimpleExamplesResponse {
  // values are the results of the query.
  repeated SimpleExample values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// SimpleExamplesByUniqueRequest is the TestSchemaQuery/SimpleExamplesByUniqueRequest request type.
message SimpleExamplesByUniqueRequest {
  // unique is the value of the unique field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string unique = 1;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// SimpleExamplesByUniqueResponse is the TestSchemaQuery/SimpleExamplesByUniqueResponse response type.
message SimpleExamplesByUniqueResponse {
  // values are the results of the query.
  repeated SimpleExample values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ExampleAutoIncFieldNameRequest is the TestSchemaQuery/ExampleAutoIncFieldNameRequest request type.
message ExampleAutoIncFieldNameRequest {
  // foo specifies the value of the foo field in the primary key.
  uint64 foo = 1;
}

// ExampleAutoIncFieldNameResponse is the TestSchemaQuery/ExampleAutoIncFieldNameResponse response type.
message ExampleAutoIncFieldNameResponse {
  // value is the response value.
  ExampleAutoIncFieldName value = 1;
}

// ExampleAutoIncFieldNamesRequest is the TestSchemaQuery/ExampleAutoIncFieldNamesRequest request type.
message ExampleAutoIncFieldNamesRequest {
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// ExampleAutoIncFieldNamesResponse is the TestSchemaQuery/ExampleAutoIncFieldNamesResponse response type.
message ExampleAutoIncFieldNamesResponse {
  // values are the results of the query.
  repeated ExampleAutoIncFieldName values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

