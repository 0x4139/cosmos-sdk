// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.
syntax = "proto3";
package testpb;

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "testpb/bank.proto";

// BankQueryService queries the state of the tables specified by testpb/bank.proto.
service BankQueryService {
  // Balance queries the Balance table by its primary key.
  rpc Balance(BalanceRequest) returns (BalanceResponse) {
    option (google.api.http) = {
      get: "testpb/balances/{address}/{denom}"
    };
  }
  // Balances queries the Balance table using the primary key index.
  rpc Balances(BalancesRequest) returns (BalancesResponse) {}
  // BalancesByDenom queries the Balance table using the primary key index.
  rpc BalancesByDenom(BalancesByDenomRequest) returns (BalancesByDenomResponse) {}
  // Supply queries the Supply table by its primary key.
  rpc Supply(SupplyRequest) returns (SupplyResponse) {
    option (google.api.http) = {
      get: "testpb/supplies/{denom}"
    };
  }
  // Supplies queries the Supply table using the primary key index.
  rpc Supplies(SuppliesRequest) returns (SuppliesResponse) {}
}

// BalanceRequest is the BankQuery/BalanceRequest request type.
message BalanceRequest {
  // address specifies the value of the address field in the primary key.
  string address = 1;
  // denom specifies the value of the denom field in the primary key.
  string denom = 2;
}

// BalanceResponse is the BankQuery/BalanceResponse response type.
message BalanceResponse {
  // value is the response value.
  Balance value = 1;
}

// BalancesRequest is the BankQuery/BalancesRequest request type.
message BalancesRequest {
  // address is the value of the address field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string address = 1;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// BalancesResponse is the BankQuery/BalancesResponse response type.
message BalancesResponse {
  // values are the results of the query.
  repeated Balance values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// BalancesByDenomRequest is the BankQuery/BalancesByDenomRequest request type.
message BalancesByDenomRequest {
  // denom is the value of the denom field in the index.
  // It can be omitted to query for all valid values of that field in this segment of the index.
  optional string denom = 1;
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// BalancesByDenomResponse is the BankQuery/BalancesByDenomResponse response type.
message BalancesByDenomResponse {
  // values are the results of the query.
  repeated Balance values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// SupplyRequest is the BankQuery/SupplyRequest request type.
message SupplyRequest {
  // denom specifies the value of the denom field in the primary key.
  string denom = 1;
}

// SupplyResponse is the BankQuery/SupplyResponse response type.
message SupplyResponse {
  // value is the response value.
  Supply value = 1;
}

// SuppliesRequest is the BankQuery/SuppliesRequest request type.
message SuppliesRequest {
  // pagination specifies optional pagination parameters.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// SuppliesResponse is the BankQuery/SuppliesResponse response type.
message SuppliesResponse {
  // values are the results of the query.
  repeated Supply values = 1;
  // pagination is the pagination response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

