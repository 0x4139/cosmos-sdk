// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: testpb/test_schema_query.proto

package testpb

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExampleTableRequest is the TestSchemaQuery/ExampleTableRequest request type.
type ExampleTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// u32 specifies the value of the u32 field in the primary key.
	U32 uint32 `protobuf:"varint,1,opt,name=u32,proto3" json:"u32,omitempty"`
	// i64 specifies the value of the i64 field in the primary key.
	I64 int64 `protobuf:"varint,2,opt,name=i64,proto3" json:"i64,omitempty"`
	// str specifies the value of the str field in the primary key.
	Str string `protobuf:"bytes,3,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *ExampleTableRequest) Reset() {
	*x = ExampleTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTableRequest) ProtoMessage() {}

func (x *ExampleTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTableRequest.ProtoReflect.Descriptor instead.
func (*ExampleTableRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{0}
}

func (x *ExampleTableRequest) GetU32() uint32 {
	if x != nil {
		return x.U32
	}
	return 0
}

func (x *ExampleTableRequest) GetI64() int64 {
	if x != nil {
		return x.I64
	}
	return 0
}

func (x *ExampleTableRequest) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

// ExampleTableResponse is the TestSchemaQuery/ExampleTableResponse response type.
type ExampleTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *ExampleTable `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleTableResponse) Reset() {
	*x = ExampleTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTableResponse) ProtoMessage() {}

func (x *ExampleTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTableResponse.ProtoReflect.Descriptor instead.
func (*ExampleTableResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{1}
}

func (x *ExampleTableResponse) GetValue() *ExampleTable {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleTableByU64StrRequest is the TestSchemaQuery/ExampleTableByU64StrRequest request type.
type ExampleTableByU64StrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U64 uint64 `protobuf:"varint,1,opt,name=u64,proto3" json:"u64,omitempty"`
	Str string `protobuf:"bytes,2,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *ExampleTableByU64StrRequest) Reset() {
	*x = ExampleTableByU64StrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTableByU64StrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTableByU64StrRequest) ProtoMessage() {}

func (x *ExampleTableByU64StrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTableByU64StrRequest.ProtoReflect.Descriptor instead.
func (*ExampleTableByU64StrRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{2}
}

func (x *ExampleTableByU64StrRequest) GetU64() uint64 {
	if x != nil {
		return x.U64
	}
	return 0
}

func (x *ExampleTableByU64StrRequest) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

// ExampleTableByU64StrResponse is the TestSchemaQuery/ExampleTableByU64StrResponse response type.
type ExampleTableByU64StrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ExampleTable `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleTableByU64StrResponse) Reset() {
	*x = ExampleTableByU64StrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTableByU64StrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTableByU64StrResponse) ProtoMessage() {}

func (x *ExampleTableByU64StrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTableByU64StrResponse.ProtoReflect.Descriptor instead.
func (*ExampleTableByU64StrResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{3}
}

func (x *ExampleTableByU64StrResponse) GetValue() *ExampleTable {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleTablesRequest is the TestSchemaQuery/ExampleTablesRequest request type.
type ExampleTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// u32 is the value of the u32 field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	U32 *uint32 `protobuf:"varint,1,opt,name=u32,proto3,oneof" json:"u32,omitempty"`
	// i64 is the value of the i64 field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	I64 *int64 `protobuf:"varint,2,opt,name=i64,proto3,oneof" json:"i64,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesRequest) Reset() {
	*x = ExampleTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesRequest) ProtoMessage() {}

func (x *ExampleTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesRequest.ProtoReflect.Descriptor instead.
func (*ExampleTablesRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{4}
}

func (x *ExampleTablesRequest) GetU32() uint32 {
	if x != nil && x.U32 != nil {
		return *x.U32
	}
	return 0
}

func (x *ExampleTablesRequest) GetI64() int64 {
	if x != nil && x.I64 != nil {
		return *x.I64
	}
	return 0
}

func (x *ExampleTablesRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesResponse is the TestSchemaQuery/ExampleTablesResponse response type.
type ExampleTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleTable `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesResponse) Reset() {
	*x = ExampleTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesResponse) ProtoMessage() {}

func (x *ExampleTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesResponse.ProtoReflect.Descriptor instead.
func (*ExampleTablesResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{5}
}

func (x *ExampleTablesResponse) GetValues() []*ExampleTable {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleTablesResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesByU64StrRequest is the TestSchemaQuery/ExampleTablesByU64StrRequest request type.
type ExampleTablesByU64StrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// u64 is the value of the u64 field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	U64 *uint64 `protobuf:"varint,1,opt,name=u64,proto3,oneof" json:"u64,omitempty"`
	// str is the value of the str field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Str *string `protobuf:"bytes,2,opt,name=str,proto3,oneof" json:"str,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesByU64StrRequest) Reset() {
	*x = ExampleTablesByU64StrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesByU64StrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesByU64StrRequest) ProtoMessage() {}

func (x *ExampleTablesByU64StrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesByU64StrRequest.ProtoReflect.Descriptor instead.
func (*ExampleTablesByU64StrRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{6}
}

func (x *ExampleTablesByU64StrRequest) GetU64() uint64 {
	if x != nil && x.U64 != nil {
		return *x.U64
	}
	return 0
}

func (x *ExampleTablesByU64StrRequest) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

func (x *ExampleTablesByU64StrRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesByU64StrResponse is the TestSchemaQuery/ExampleTablesByU64StrResponse response type.
type ExampleTablesByU64StrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleTable `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesByU64StrResponse) Reset() {
	*x = ExampleTablesByU64StrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesByU64StrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesByU64StrResponse) ProtoMessage() {}

func (x *ExampleTablesByU64StrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesByU64StrResponse.ProtoReflect.Descriptor instead.
func (*ExampleTablesByU64StrResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{7}
}

func (x *ExampleTablesByU64StrResponse) GetValues() []*ExampleTable {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleTablesByU64StrResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesByStrU32Request is the TestSchemaQuery/ExampleTablesByStrU32Request request type.
type ExampleTablesByStrU32Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// str is the value of the str field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Str *string `protobuf:"bytes,1,opt,name=str,proto3,oneof" json:"str,omitempty"`
	// u32 is the value of the u32 field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	U32 *uint32 `protobuf:"varint,2,opt,name=u32,proto3,oneof" json:"u32,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesByStrU32Request) Reset() {
	*x = ExampleTablesByStrU32Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesByStrU32Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesByStrU32Request) ProtoMessage() {}

func (x *ExampleTablesByStrU32Request) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesByStrU32Request.ProtoReflect.Descriptor instead.
func (*ExampleTablesByStrU32Request) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{8}
}

func (x *ExampleTablesByStrU32Request) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

func (x *ExampleTablesByStrU32Request) GetU32() uint32 {
	if x != nil && x.U32 != nil {
		return *x.U32
	}
	return 0
}

func (x *ExampleTablesByStrU32Request) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesByStrU32Response is the TestSchemaQuery/ExampleTablesByStrU32Response response type.
type ExampleTablesByStrU32Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleTable `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesByStrU32Response) Reset() {
	*x = ExampleTablesByStrU32Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesByStrU32Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesByStrU32Response) ProtoMessage() {}

func (x *ExampleTablesByStrU32Response) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesByStrU32Response.ProtoReflect.Descriptor instead.
func (*ExampleTablesByStrU32Response) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{9}
}

func (x *ExampleTablesByStrU32Response) GetValues() []*ExampleTable {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleTablesByStrU32Response) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesByBzStrRequest is the TestSchemaQuery/ExampleTablesByBzStrRequest request type.
type ExampleTablesByBzStrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bz is the value of the bz field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Bz []byte `protobuf:"bytes,1,opt,name=bz,proto3,oneof" json:"bz,omitempty"`
	// str is the value of the str field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Str *string `protobuf:"bytes,2,opt,name=str,proto3,oneof" json:"str,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesByBzStrRequest) Reset() {
	*x = ExampleTablesByBzStrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesByBzStrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesByBzStrRequest) ProtoMessage() {}

func (x *ExampleTablesByBzStrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesByBzStrRequest.ProtoReflect.Descriptor instead.
func (*ExampleTablesByBzStrRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{10}
}

func (x *ExampleTablesByBzStrRequest) GetBz() []byte {
	if x != nil {
		return x.Bz
	}
	return nil
}

func (x *ExampleTablesByBzStrRequest) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

func (x *ExampleTablesByBzStrRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTablesByBzStrResponse is the TestSchemaQuery/ExampleTablesByBzStrResponse response type.
type ExampleTablesByBzStrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleTable `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTablesByBzStrResponse) Reset() {
	*x = ExampleTablesByBzStrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTablesByBzStrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTablesByBzStrResponse) ProtoMessage() {}

func (x *ExampleTablesByBzStrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTablesByBzStrResponse.ProtoReflect.Descriptor instead.
func (*ExampleTablesByBzStrResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{11}
}

func (x *ExampleTablesByBzStrResponse) GetValues() []*ExampleTable {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleTablesByBzStrResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleAutoIncrementTableRequest is the TestSchemaQuery/ExampleAutoIncrementTableRequest request type.
type ExampleAutoIncrementTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id specifies the value of the id field in the primary key.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExampleAutoIncrementTableRequest) Reset() {
	*x = ExampleAutoIncrementTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTableRequest) ProtoMessage() {}

func (x *ExampleAutoIncrementTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTableRequest.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTableRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{12}
}

func (x *ExampleAutoIncrementTableRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ExampleAutoIncrementTableResponse is the TestSchemaQuery/ExampleAutoIncrementTableResponse response type.
type ExampleAutoIncrementTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *ExampleAutoIncrementTable `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleAutoIncrementTableResponse) Reset() {
	*x = ExampleAutoIncrementTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTableResponse) ProtoMessage() {}

func (x *ExampleAutoIncrementTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTableResponse.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTableResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{13}
}

func (x *ExampleAutoIncrementTableResponse) GetValue() *ExampleAutoIncrementTable {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleAutoIncrementTableByXRequest is the TestSchemaQuery/ExampleAutoIncrementTableByXRequest request type.
type ExampleAutoIncrementTableByXRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X string `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
}

func (x *ExampleAutoIncrementTableByXRequest) Reset() {
	*x = ExampleAutoIncrementTableByXRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTableByXRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTableByXRequest) ProtoMessage() {}

func (x *ExampleAutoIncrementTableByXRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTableByXRequest.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTableByXRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{14}
}

func (x *ExampleAutoIncrementTableByXRequest) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

// ExampleAutoIncrementTableByXResponse is the TestSchemaQuery/ExampleAutoIncrementTableByXResponse response type.
type ExampleAutoIncrementTableByXResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ExampleAutoIncrementTable `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleAutoIncrementTableByXResponse) Reset() {
	*x = ExampleAutoIncrementTableByXResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTableByXResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTableByXResponse) ProtoMessage() {}

func (x *ExampleAutoIncrementTableByXResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTableByXResponse.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTableByXResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{15}
}

func (x *ExampleAutoIncrementTableByXResponse) GetValue() *ExampleAutoIncrementTable {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleAutoIncrementTablesRequest is the TestSchemaQuery/ExampleAutoIncrementTablesRequest request type.
type ExampleAutoIncrementTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleAutoIncrementTablesRequest) Reset() {
	*x = ExampleAutoIncrementTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTablesRequest) ProtoMessage() {}

func (x *ExampleAutoIncrementTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTablesRequest.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTablesRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{16}
}

func (x *ExampleAutoIncrementTablesRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleAutoIncrementTablesResponse is the TestSchemaQuery/ExampleAutoIncrementTablesResponse response type.
type ExampleAutoIncrementTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleAutoIncrementTable `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleAutoIncrementTablesResponse) Reset() {
	*x = ExampleAutoIncrementTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTablesResponse) ProtoMessage() {}

func (x *ExampleAutoIncrementTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTablesResponse.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTablesResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{17}
}

func (x *ExampleAutoIncrementTablesResponse) GetValues() []*ExampleAutoIncrementTable {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleAutoIncrementTablesResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleAutoIncrementTablesByXRequest is the TestSchemaQuery/ExampleAutoIncrementTablesByXRequest request type.
type ExampleAutoIncrementTablesByXRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// x is the value of the x field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	X *string `protobuf:"bytes,1,opt,name=x,proto3,oneof" json:"x,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleAutoIncrementTablesByXRequest) Reset() {
	*x = ExampleAutoIncrementTablesByXRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTablesByXRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTablesByXRequest) ProtoMessage() {}

func (x *ExampleAutoIncrementTablesByXRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTablesByXRequest.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTablesByXRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{18}
}

func (x *ExampleAutoIncrementTablesByXRequest) GetX() string {
	if x != nil && x.X != nil {
		return *x.X
	}
	return ""
}

func (x *ExampleAutoIncrementTablesByXRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleAutoIncrementTablesByXResponse is the TestSchemaQuery/ExampleAutoIncrementTablesByXResponse response type.
type ExampleAutoIncrementTablesByXResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleAutoIncrementTable `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleAutoIncrementTablesByXResponse) Reset() {
	*x = ExampleAutoIncrementTablesByXResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncrementTablesByXResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncrementTablesByXResponse) ProtoMessage() {}

func (x *ExampleAutoIncrementTablesByXResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncrementTablesByXResponse.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncrementTablesByXResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{19}
}

func (x *ExampleAutoIncrementTablesByXResponse) GetValues() []*ExampleAutoIncrementTable {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleAutoIncrementTablesByXResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleSingletonRequest is the TestSchemaQuery/ExampleSingletonRequest request type.
type ExampleSingletonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExampleSingletonRequest) Reset() {
	*x = ExampleSingletonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleSingletonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleSingletonRequest) ProtoMessage() {}

func (x *ExampleSingletonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleSingletonRequest.ProtoReflect.Descriptor instead.
func (*ExampleSingletonRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{20}
}

// ExampleSingletonResponse is the TestSchemaQuery/ExampleSingletonResponse request type.
type ExampleSingletonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ExampleSingleton `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleSingletonResponse) Reset() {
	*x = ExampleSingletonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleSingletonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleSingletonResponse) ProtoMessage() {}

func (x *ExampleSingletonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleSingletonResponse.ProtoReflect.Descriptor instead.
func (*ExampleSingletonResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{21}
}

func (x *ExampleSingletonResponse) GetValue() *ExampleSingleton {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleTimestampRequest is the TestSchemaQuery/ExampleTimestampRequest request type.
type ExampleTimestampRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id specifies the value of the id field in the primary key.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExampleTimestampRequest) Reset() {
	*x = ExampleTimestampRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTimestampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTimestampRequest) ProtoMessage() {}

func (x *ExampleTimestampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTimestampRequest.ProtoReflect.Descriptor instead.
func (*ExampleTimestampRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{22}
}

func (x *ExampleTimestampRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ExampleTimestampResponse is the TestSchemaQuery/ExampleTimestampResponse response type.
type ExampleTimestampResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *ExampleTimestamp `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleTimestampResponse) Reset() {
	*x = ExampleTimestampResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTimestampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTimestampResponse) ProtoMessage() {}

func (x *ExampleTimestampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTimestampResponse.ProtoReflect.Descriptor instead.
func (*ExampleTimestampResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{23}
}

func (x *ExampleTimestampResponse) GetValue() *ExampleTimestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleTimestampsRequest is the TestSchemaQuery/ExampleTimestampsRequest request type.
type ExampleTimestampsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTimestampsRequest) Reset() {
	*x = ExampleTimestampsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTimestampsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTimestampsRequest) ProtoMessage() {}

func (x *ExampleTimestampsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTimestampsRequest.ProtoReflect.Descriptor instead.
func (*ExampleTimestampsRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{24}
}

func (x *ExampleTimestampsRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTimestampsResponse is the TestSchemaQuery/ExampleTimestampsResponse response type.
type ExampleTimestampsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleTimestamp `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTimestampsResponse) Reset() {
	*x = ExampleTimestampsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTimestampsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTimestampsResponse) ProtoMessage() {}

func (x *ExampleTimestampsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTimestampsResponse.ProtoReflect.Descriptor instead.
func (*ExampleTimestampsResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{25}
}

func (x *ExampleTimestampsResponse) GetValues() []*ExampleTimestamp {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleTimestampsResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTimestampsByTsRequest is the TestSchemaQuery/ExampleTimestampsByTsRequest request type.
type ExampleTimestampsByTsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ts is the value of the ts field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Ts *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3,oneof" json:"ts,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTimestampsByTsRequest) Reset() {
	*x = ExampleTimestampsByTsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTimestampsByTsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTimestampsByTsRequest) ProtoMessage() {}

func (x *ExampleTimestampsByTsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTimestampsByTsRequest.ProtoReflect.Descriptor instead.
func (*ExampleTimestampsByTsRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{26}
}

func (x *ExampleTimestampsByTsRequest) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ExampleTimestampsByTsRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleTimestampsByTsResponse is the TestSchemaQuery/ExampleTimestampsByTsResponse response type.
type ExampleTimestampsByTsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleTimestamp `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleTimestampsByTsResponse) Reset() {
	*x = ExampleTimestampsByTsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleTimestampsByTsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleTimestampsByTsResponse) ProtoMessage() {}

func (x *ExampleTimestampsByTsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleTimestampsByTsResponse.ProtoReflect.Descriptor instead.
func (*ExampleTimestampsByTsResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{27}
}

func (x *ExampleTimestampsByTsResponse) GetValues() []*ExampleTimestamp {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleTimestampsByTsResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// SimpleExampleRequest is the TestSchemaQuery/SimpleExampleRequest request type.
type SimpleExampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name specifies the value of the name field in the primary key.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SimpleExampleRequest) Reset() {
	*x = SimpleExampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExampleRequest) ProtoMessage() {}

func (x *SimpleExampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExampleRequest.ProtoReflect.Descriptor instead.
func (*SimpleExampleRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{28}
}

func (x *SimpleExampleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// SimpleExampleResponse is the TestSchemaQuery/SimpleExampleResponse response type.
type SimpleExampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *SimpleExample `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SimpleExampleResponse) Reset() {
	*x = SimpleExampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExampleResponse) ProtoMessage() {}

func (x *SimpleExampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExampleResponse.ProtoReflect.Descriptor instead.
func (*SimpleExampleResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{29}
}

func (x *SimpleExampleResponse) GetValue() *SimpleExample {
	if x != nil {
		return x.Value
	}
	return nil
}

// SimpleExampleByUniqueRequest is the TestSchemaQuery/SimpleExampleByUniqueRequest request type.
type SimpleExampleByUniqueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unique string `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *SimpleExampleByUniqueRequest) Reset() {
	*x = SimpleExampleByUniqueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExampleByUniqueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExampleByUniqueRequest) ProtoMessage() {}

func (x *SimpleExampleByUniqueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExampleByUniqueRequest.ProtoReflect.Descriptor instead.
func (*SimpleExampleByUniqueRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{30}
}

func (x *SimpleExampleByUniqueRequest) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

// SimpleExampleByUniqueResponse is the TestSchemaQuery/SimpleExampleByUniqueResponse response type.
type SimpleExampleByUniqueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *SimpleExample `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SimpleExampleByUniqueResponse) Reset() {
	*x = SimpleExampleByUniqueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExampleByUniqueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExampleByUniqueResponse) ProtoMessage() {}

func (x *SimpleExampleByUniqueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExampleByUniqueResponse.ProtoReflect.Descriptor instead.
func (*SimpleExampleByUniqueResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{31}
}

func (x *SimpleExampleByUniqueResponse) GetValue() *SimpleExample {
	if x != nil {
		return x.Value
	}
	return nil
}

// SimpleExamplesRequest is the TestSchemaQuery/SimpleExamplesRequest request type.
type SimpleExamplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SimpleExamplesRequest) Reset() {
	*x = SimpleExamplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExamplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExamplesRequest) ProtoMessage() {}

func (x *SimpleExamplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExamplesRequest.ProtoReflect.Descriptor instead.
func (*SimpleExamplesRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{32}
}

func (x *SimpleExamplesRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// SimpleExamplesResponse is the TestSchemaQuery/SimpleExamplesResponse response type.
type SimpleExamplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*SimpleExample `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SimpleExamplesResponse) Reset() {
	*x = SimpleExamplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExamplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExamplesResponse) ProtoMessage() {}

func (x *SimpleExamplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExamplesResponse.ProtoReflect.Descriptor instead.
func (*SimpleExamplesResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{33}
}

func (x *SimpleExamplesResponse) GetValues() []*SimpleExample {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SimpleExamplesResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// SimpleExamplesByUniqueRequest is the TestSchemaQuery/SimpleExamplesByUniqueRequest request type.
type SimpleExamplesByUniqueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique is the value of the unique field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Unique *string `protobuf:"bytes,1,opt,name=unique,proto3,oneof" json:"unique,omitempty"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SimpleExamplesByUniqueRequest) Reset() {
	*x = SimpleExamplesByUniqueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExamplesByUniqueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExamplesByUniqueRequest) ProtoMessage() {}

func (x *SimpleExamplesByUniqueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExamplesByUniqueRequest.ProtoReflect.Descriptor instead.
func (*SimpleExamplesByUniqueRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{34}
}

func (x *SimpleExamplesByUniqueRequest) GetUnique() string {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return ""
}

func (x *SimpleExamplesByUniqueRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// SimpleExamplesByUniqueResponse is the TestSchemaQuery/SimpleExamplesByUniqueResponse response type.
type SimpleExamplesByUniqueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*SimpleExample `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SimpleExamplesByUniqueResponse) Reset() {
	*x = SimpleExamplesByUniqueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleExamplesByUniqueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleExamplesByUniqueResponse) ProtoMessage() {}

func (x *SimpleExamplesByUniqueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleExamplesByUniqueResponse.ProtoReflect.Descriptor instead.
func (*SimpleExamplesByUniqueResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{35}
}

func (x *SimpleExamplesByUniqueResponse) GetValues() []*SimpleExample {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SimpleExamplesByUniqueResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleAutoIncFieldNameRequest is the TestSchemaQuery/ExampleAutoIncFieldNameRequest request type.
type ExampleAutoIncFieldNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// foo specifies the value of the foo field in the primary key.
	Foo uint64 `protobuf:"varint,1,opt,name=foo,proto3" json:"foo,omitempty"`
}

func (x *ExampleAutoIncFieldNameRequest) Reset() {
	*x = ExampleAutoIncFieldNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncFieldNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncFieldNameRequest) ProtoMessage() {}

func (x *ExampleAutoIncFieldNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncFieldNameRequest.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncFieldNameRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{36}
}

func (x *ExampleAutoIncFieldNameRequest) GetFoo() uint64 {
	if x != nil {
		return x.Foo
	}
	return 0
}

// ExampleAutoIncFieldNameResponse is the TestSchemaQuery/ExampleAutoIncFieldNameResponse response type.
type ExampleAutoIncFieldNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *ExampleAutoIncFieldName `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExampleAutoIncFieldNameResponse) Reset() {
	*x = ExampleAutoIncFieldNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncFieldNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncFieldNameResponse) ProtoMessage() {}

func (x *ExampleAutoIncFieldNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncFieldNameResponse.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncFieldNameResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{37}
}

func (x *ExampleAutoIncFieldNameResponse) GetValue() *ExampleAutoIncFieldName {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExampleAutoIncFieldNamesRequest is the TestSchemaQuery/ExampleAutoIncFieldNamesRequest request type.
type ExampleAutoIncFieldNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleAutoIncFieldNamesRequest) Reset() {
	*x = ExampleAutoIncFieldNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncFieldNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncFieldNamesRequest) ProtoMessage() {}

func (x *ExampleAutoIncFieldNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncFieldNamesRequest.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncFieldNamesRequest) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{38}
}

func (x *ExampleAutoIncFieldNamesRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ExampleAutoIncFieldNamesResponse is the TestSchemaQuery/ExampleAutoIncFieldNamesResponse response type.
type ExampleAutoIncFieldNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ExampleAutoIncFieldName `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExampleAutoIncFieldNamesResponse) Reset() {
	*x = ExampleAutoIncFieldNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_test_schema_query_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleAutoIncFieldNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleAutoIncFieldNamesResponse) ProtoMessage() {}

func (x *ExampleAutoIncFieldNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_test_schema_query_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleAutoIncFieldNamesResponse.ProtoReflect.Descriptor instead.
func (*ExampleAutoIncFieldNamesResponse) Descriptor() ([]byte, []int) {
	return file_testpb_test_schema_query_proto_rawDescGZIP(), []int{39}
}

func (x *ExampleAutoIncFieldNamesResponse) GetValues() []*ExampleAutoIncFieldName {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ExampleAutoIncFieldNamesResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_testpb_test_schema_query_proto protoreflect.FileDescriptor

var file_testpb_test_schema_query_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a,
	0x13, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0x42, 0x0a, 0x14, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41,
	0x0a, 0x1b, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79,
	0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x36, 0x34, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74,
	0x72, 0x22, 0x4a, 0x0a, 0x1c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x79, 0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c, 0x01,
	0x0a, 0x14, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x33, 0x32, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x75, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x69, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x03, 0x69, 0x36,
	0x34, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x75, 0x33, 0x32, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x69, 0x36, 0x34, 0x22, 0x8e, 0x01, 0x0a,
	0x15, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01,
	0x0a, 0x1c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x75, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x03, 0x75,
	0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x73, 0x74, 0x72, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x36, 0x34, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x73, 0x74, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01,
	0x0a, 0x1c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x53, 0x74, 0x72, 0x55, 0x33, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x74, 0x72, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x33, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x03, 0x75, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x72, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x75, 0x33, 0x32, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x72, 0x55, 0x33, 0x32, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01,
	0x0a, 0x1b, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x42, 0x7a, 0x53, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a,
	0x02, 0x62, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x62, 0x7a, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x03, 0x73, 0x74, 0x72, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x62, 0x7a, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x72,
	0x22, 0x95, 0x01, 0x0a, 0x1c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x42, 0x7a, 0x53, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x20, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x21,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x23, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x78, 0x22,
	0x5f, 0x0a, 0x24, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x58, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x6b, 0x0a, 0x21, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa8, 0x01,
	0x0a, 0x22, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x24, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x11, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0x0a, 0x02,
	0x5f, 0x78, 0x22, 0xab, 0x01, 0x0a, 0x25, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x58, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x19, 0x0a, 0x17, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x62,
	0x0a, 0x18, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1c,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x42, 0x79, 0x54, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x02, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x73, 0x22, 0x9a, 0x01, 0x0a,
	0x1d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x42, 0x79, 0x54, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x14, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x1c, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x1d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x5f, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x1e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x1e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x66, 0x6f, 0x6f, 0x22, 0x58, 0x0a, 0x1f, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x69, 0x0a, 0x1f, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x20,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0xb9, 0x16, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a,
	0x0c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x12, 0x28, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x33, 0x32, 0x7d, 0x2f, 0x7b,
	0x69, 0x36, 0x34, 0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x72, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x36, 0x34,
	0x53, 0x74, 0x72, 0x12, 0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x36, 0x34, 0x53, 0x74,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79,
	0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x75,
	0x36, 0x34, 0x2d, 0x73, 0x74, 0x72, 0x2f, 0x7b, 0x75, 0x36, 0x34, 0x7d, 0x2f, 0x7b, 0x73, 0x74,
	0x72, 0x7d, 0x12, 0x6c, 0x0a, 0x0d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x8f, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x36, 0x34, 0x53, 0x74, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12,
	0x21, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2d, 0x62, 0x79, 0x2d, 0x75, 0x36, 0x34, 0x2d, 0x73,
	0x74, 0x72, 0x12, 0x8f, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x72, 0x55, 0x33, 0x32, 0x12, 0x24, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x72, 0x55, 0x33, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x72, 0x55, 0x33,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x12, 0x21, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2d, 0x62, 0x79, 0x2d, 0x73, 0x74, 0x72,
	0x2d, 0x75, 0x33, 0x32, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x42, 0x7a, 0x53, 0x74, 0x72, 0x12, 0x23, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x42, 0x7a, 0x53, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x42, 0x7a, 0x53, 0x74, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x12, 0x20, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2d, 0x62, 0x79, 0x2d, 0x62, 0x7a, 0x2d, 0x73,
	0x74, 0x72, 0x12, 0xa4, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x28, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x1c, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x58, 0x12, 0x2b, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x58,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x58, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x2e, 0x78, 0x2f, 0x7b, 0x78, 0x7d, 0x12, 0xa2, 0x01, 0x0a, 0x1a, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0xb0, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x58, 0x12, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x58, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2d, 0x62, 0x79,
	0x2d, 0x78, 0x12, 0x57, 0x0a, 0x10, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x10, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x11, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x12, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x42,
	0x79, 0x54, 0x73, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x42, 0x79,
	0x54, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x42, 0x79, 0x54, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x2d, 0x62, 0x79, 0x2d, 0x74, 0x73, 0x12, 0x74, 0x0a, 0x0d, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x12, 0x95, 0x01, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12,
	0x27, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x2f,
	0x7b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x7d, 0x12, 0x70, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x16, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2d, 0x62, 0x79, 0x2d, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12,
	0x9e, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x66, 0x6f, 0x6f, 0x7d,
	0x12, 0x9b, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69,
	0x6e, 0x63, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x8c,
	0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x42, 0x14, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x06,
	0x54, 0x65, 0x73, 0x74, 0x70, 0x62, 0xca, 0x02, 0x06, 0x54, 0x65, 0x73, 0x74, 0x70, 0x62, 0xe2,
	0x02, 0x12, 0x54, 0x65, 0x73, 0x74, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x54, 0x65, 0x73, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testpb_test_schema_query_proto_rawDescOnce sync.Once
	file_testpb_test_schema_query_proto_rawDescData = file_testpb_test_schema_query_proto_rawDesc
)

func file_testpb_test_schema_query_proto_rawDescGZIP() []byte {
	file_testpb_test_schema_query_proto_rawDescOnce.Do(func() {
		file_testpb_test_schema_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_testpb_test_schema_query_proto_rawDescData)
	})
	return file_testpb_test_schema_query_proto_rawDescData
}

var file_testpb_test_schema_query_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_testpb_test_schema_query_proto_goTypes = []interface{}{
	(*ExampleTableRequest)(nil),                   // 0: testpb.ExampleTableRequest
	(*ExampleTableResponse)(nil),                  // 1: testpb.ExampleTableResponse
	(*ExampleTableByU64StrRequest)(nil),           // 2: testpb.ExampleTableByU64StrRequest
	(*ExampleTableByU64StrResponse)(nil),          // 3: testpb.ExampleTableByU64StrResponse
	(*ExampleTablesRequest)(nil),                  // 4: testpb.ExampleTablesRequest
	(*ExampleTablesResponse)(nil),                 // 5: testpb.ExampleTablesResponse
	(*ExampleTablesByU64StrRequest)(nil),          // 6: testpb.ExampleTablesByU64StrRequest
	(*ExampleTablesByU64StrResponse)(nil),         // 7: testpb.ExampleTablesByU64StrResponse
	(*ExampleTablesByStrU32Request)(nil),          // 8: testpb.ExampleTablesByStrU32Request
	(*ExampleTablesByStrU32Response)(nil),         // 9: testpb.ExampleTablesByStrU32Response
	(*ExampleTablesByBzStrRequest)(nil),           // 10: testpb.ExampleTablesByBzStrRequest
	(*ExampleTablesByBzStrResponse)(nil),          // 11: testpb.ExampleTablesByBzStrResponse
	(*ExampleAutoIncrementTableRequest)(nil),      // 12: testpb.ExampleAutoIncrementTableRequest
	(*ExampleAutoIncrementTableResponse)(nil),     // 13: testpb.ExampleAutoIncrementTableResponse
	(*ExampleAutoIncrementTableByXRequest)(nil),   // 14: testpb.ExampleAutoIncrementTableByXRequest
	(*ExampleAutoIncrementTableByXResponse)(nil),  // 15: testpb.ExampleAutoIncrementTableByXResponse
	(*ExampleAutoIncrementTablesRequest)(nil),     // 16: testpb.ExampleAutoIncrementTablesRequest
	(*ExampleAutoIncrementTablesResponse)(nil),    // 17: testpb.ExampleAutoIncrementTablesResponse
	(*ExampleAutoIncrementTablesByXRequest)(nil),  // 18: testpb.ExampleAutoIncrementTablesByXRequest
	(*ExampleAutoIncrementTablesByXResponse)(nil), // 19: testpb.ExampleAutoIncrementTablesByXResponse
	(*ExampleSingletonRequest)(nil),               // 20: testpb.ExampleSingletonRequest
	(*ExampleSingletonResponse)(nil),              // 21: testpb.ExampleSingletonResponse
	(*ExampleTimestampRequest)(nil),               // 22: testpb.ExampleTimestampRequest
	(*ExampleTimestampResponse)(nil),              // 23: testpb.ExampleTimestampResponse
	(*ExampleTimestampsRequest)(nil),              // 24: testpb.ExampleTimestampsRequest
	(*ExampleTimestampsResponse)(nil),             // 25: testpb.ExampleTimestampsResponse
	(*ExampleTimestampsByTsRequest)(nil),          // 26: testpb.ExampleTimestampsByTsRequest
	(*ExampleTimestampsByTsResponse)(nil),         // 27: testpb.ExampleTimestampsByTsResponse
	(*SimpleExampleRequest)(nil),                  // 28: testpb.SimpleExampleRequest
	(*SimpleExampleResponse)(nil),                 // 29: testpb.SimpleExampleResponse
	(*SimpleExampleByUniqueRequest)(nil),          // 30: testpb.SimpleExampleByUniqueRequest
	(*SimpleExampleByUniqueResponse)(nil),         // 31: testpb.SimpleExampleByUniqueResponse
	(*SimpleExamplesRequest)(nil),                 // 32: testpb.SimpleExamplesRequest
	(*SimpleExamplesResponse)(nil),                // 33: testpb.SimpleExamplesResponse
	(*SimpleExamplesByUniqueRequest)(nil),         // 34: testpb.SimpleExamplesByUniqueRequest
	(*SimpleExamplesByUniqueResponse)(nil),        // 35: testpb.SimpleExamplesByUniqueResponse
	(*ExampleAutoIncFieldNameRequest)(nil),        // 36: testpb.ExampleAutoIncFieldNameRequest
	(*ExampleAutoIncFieldNameResponse)(nil),       // 37: testpb.ExampleAutoIncFieldNameResponse
	(*ExampleAutoIncFieldNamesRequest)(nil),       // 38: testpb.ExampleAutoIncFieldNamesRequest
	(*ExampleAutoIncFieldNamesResponse)(nil),      // 39: testpb.ExampleAutoIncFieldNamesResponse
	(*ExampleTable)(nil),                          // 40: testpb.ExampleTable
	(*v1beta1.PageRequest)(nil),                   // 41: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                  // 42: cosmos.base.query.v1beta1.PageResponse
	(*ExampleAutoIncrementTable)(nil),             // 43: testpb.ExampleAutoIncrementTable
	(*ExampleSingleton)(nil),                      // 44: testpb.ExampleSingleton
	(*ExampleTimestamp)(nil),                      // 45: testpb.ExampleTimestamp
	(*timestamppb.Timestamp)(nil),                 // 46: google.protobuf.Timestamp
	(*SimpleExample)(nil),                         // 47: testpb.SimpleExample
	(*ExampleAutoIncFieldName)(nil),               // 48: testpb.ExampleAutoIncFieldName
}
var file_testpb_test_schema_query_proto_depIdxs = []int32{
	40, // 0: testpb.ExampleTableResponse.value:type_name -> testpb.ExampleTable
	40, // 1: testpb.ExampleTableByU64StrResponse.value:type_name -> testpb.ExampleTable
	41, // 2: testpb.ExampleTablesRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	40, // 3: testpb.ExampleTablesResponse.values:type_name -> testpb.ExampleTable
	42, // 4: testpb.ExampleTablesResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	41, // 5: testpb.ExampleTablesByU64StrRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	40, // 6: testpb.ExampleTablesByU64StrResponse.values:type_name -> testpb.ExampleTable
	42, // 7: testpb.ExampleTablesByU64StrResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	41, // 8: testpb.ExampleTablesByStrU32Request.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	40, // 9: testpb.ExampleTablesByStrU32Response.values:type_name -> testpb.ExampleTable
	42, // 10: testpb.ExampleTablesByStrU32Response.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	41, // 11: testpb.ExampleTablesByBzStrRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	40, // 12: testpb.ExampleTablesByBzStrResponse.values:type_name -> testpb.ExampleTable
	42, // 13: testpb.ExampleTablesByBzStrResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	43, // 14: testpb.ExampleAutoIncrementTableResponse.value:type_name -> testpb.ExampleAutoIncrementTable
	43, // 15: testpb.ExampleAutoIncrementTableByXResponse.value:type_name -> testpb.ExampleAutoIncrementTable
	41, // 16: testpb.ExampleAutoIncrementTablesRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	43, // 17: testpb.ExampleAutoIncrementTablesResponse.values:type_name -> testpb.ExampleAutoIncrementTable
	42, // 18: testpb.ExampleAutoIncrementTablesResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	41, // 19: testpb.ExampleAutoIncrementTablesByXRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	43, // 20: testpb.ExampleAutoIncrementTablesByXResponse.values:type_name -> testpb.ExampleAutoIncrementTable
	42, // 21: testpb.ExampleAutoIncrementTablesByXResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	44, // 22: testpb.ExampleSingletonResponse.value:type_name -> testpb.ExampleSingleton
	45, // 23: testpb.ExampleTimestampResponse.value:type_name -> testpb.ExampleTimestamp
	41, // 24: testpb.ExampleTimestampsRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	45, // 25: testpb.ExampleTimestampsResponse.values:type_name -> testpb.ExampleTimestamp
	42, // 26: testpb.ExampleTimestampsResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	46, // 27: testpb.ExampleTimestampsByTsRequest.ts:type_name -> google.protobuf.Timestamp
	41, // 28: testpb.ExampleTimestampsByTsRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	45, // 29: testpb.ExampleTimestampsByTsResponse.values:type_name -> testpb.ExampleTimestamp
	42, // 30: testpb.ExampleTimestampsByTsResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	47, // 31: testpb.SimpleExampleResponse.value:type_name -> testpb.SimpleExample
	47, // 32: testpb.SimpleExampleByUniqueResponse.value:type_name -> testpb.SimpleExample
	41, // 33: testpb.SimpleExamplesRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	47, // 34: testpb.SimpleExamplesResponse.values:type_name -> testpb.SimpleExample
	42, // 35: testpb.SimpleExamplesResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	41, // 36: testpb.SimpleExamplesByUniqueRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	47, // 37: testpb.SimpleExamplesByUniqueResponse.values:type_name -> testpb.SimpleExample
	42, // 38: testpb.SimpleExamplesByUniqueResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	48, // 39: testpb.ExampleAutoIncFieldNameResponse.value:type_name -> testpb.ExampleAutoIncFieldName
	41, // 40: testpb.ExampleAutoIncFieldNamesRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	48, // 41: testpb.ExampleAutoIncFieldNamesResponse.values:type_name -> testpb.ExampleAutoIncFieldName
	42, // 42: testpb.ExampleAutoIncFieldNamesResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	0,  // 43: testpb.TestSchemaQueryService.ExampleTable:input_type -> testpb.ExampleTableRequest
	2,  // 44: testpb.TestSchemaQueryService.ExampleTableByU64Str:input_type -> testpb.ExampleTableByU64StrRequest
	4,  // 45: testpb.TestSchemaQueryService.ExampleTables:input_type -> testpb.ExampleTablesRequest
	6,  // 46: testpb.TestSchemaQueryService.ExampleTablesByU64Str:input_type -> testpb.ExampleTablesByU64StrRequest
	8,  // 47: testpb.TestSchemaQueryService.ExampleTablesByStrU32:input_type -> testpb.ExampleTablesByStrU32Request
	10, // 48: testpb.TestSchemaQueryService.ExampleTablesByBzStr:input_type -> testpb.ExampleTablesByBzStrRequest
	12, // 49: testpb.TestSchemaQueryService.ExampleAutoIncrementTable:input_type -> testpb.ExampleAutoIncrementTableRequest
	14, // 50: testpb.TestSchemaQueryService.ExampleAutoIncrementTableByX:input_type -> testpb.ExampleAutoIncrementTableByXRequest
	16, // 51: testpb.TestSchemaQueryService.ExampleAutoIncrementTables:input_type -> testpb.ExampleAutoIncrementTablesRequest
	18, // 52: testpb.TestSchemaQueryService.ExampleAutoIncrementTablesByX:input_type -> testpb.ExampleAutoIncrementTablesByXRequest
	20, // 53: testpb.TestSchemaQueryService.ExampleSingleton:input_type -> testpb.ExampleSingletonRequest
	22, // 54: testpb.TestSchemaQueryService.ExampleTimestamp:input_type -> testpb.ExampleTimestampRequest
	24, // 55: testpb.TestSchemaQueryService.ExampleTimestamps:input_type -> testpb.ExampleTimestampsRequest
	26, // 56: testpb.TestSchemaQueryService.ExampleTimestampsByTs:input_type -> testpb.ExampleTimestampsByTsRequest
	28, // 57: testpb.TestSchemaQueryService.SimpleExample:input_type -> testpb.SimpleExampleRequest
	30, // 58: testpb.TestSchemaQueryService.SimpleExampleByUnique:input_type -> testpb.SimpleExampleByUniqueRequest
	32, // 59: testpb.TestSchemaQueryService.SimpleExamples:input_type -> testpb.SimpleExamplesRequest
	34, // 60: testpb.TestSchemaQueryService.SimpleExamplesByUnique:input_type -> testpb.SimpleExamplesByUniqueRequest
	36, // 61: testpb.TestSchemaQueryService.ExampleAutoIncFieldName:input_type -> testpb.ExampleAutoIncFieldNameRequest
	38, // 62: testpb.TestSchemaQueryService.ExampleAutoIncFieldNames:input_type -> testpb.ExampleAutoIncFieldNamesRequest
	1,  // 63: testpb.TestSchemaQueryService.ExampleTable:output_type -> testpb.ExampleTableResponse
	3,  // 64: testpb.TestSchemaQueryService.ExampleTableByU64Str:output_type -> testpb.ExampleTableByU64StrResponse
	5,  // 65: testpb.TestSchemaQueryService.ExampleTables:output_type -> testpb.ExampleTablesResponse
	7,  // 66: testpb.TestSchemaQueryService.ExampleTablesByU64Str:output_type -> testpb.ExampleTablesByU64StrResponse
	9,  // 67: testpb.TestSchemaQueryService.ExampleTablesByStrU32:output_type -> testpb.ExampleTablesByStrU32Response
	11, // 68: testpb.TestSchemaQueryService.ExampleTablesByBzStr:output_type -> testpb.ExampleTablesByBzStrResponse
	13, // 69: testpb.TestSchemaQueryService.ExampleAutoIncrementTable:output_type -> testpb.ExampleAutoIncrementTableResponse
	15, // 70: testpb.TestSchemaQueryService.ExampleAutoIncrementTableByX:output_type -> testpb.ExampleAutoIncrementTableByXResponse
	17, // 71: testpb.TestSchemaQueryService.ExampleAutoIncrementTables:output_type -> testpb.ExampleAutoIncrementTablesResponse
	19, // 72: testpb.TestSchemaQueryService.ExampleAutoIncrementTablesByX:output_type -> testpb.ExampleAutoIncrementTablesByXResponse
	21, // 73: testpb.TestSchemaQueryService.ExampleSingleton:output_type -> testpb.ExampleSingletonResponse
	23, // 74: testpb.TestSchemaQueryService.ExampleTimestamp:output_type -> testpb.ExampleTimestampResponse
	25, // 75: testpb.TestSchemaQueryService.ExampleTimestamps:output_type -> testpb.ExampleTimestampsResponse
	27, // 76: testpb.TestSchemaQueryService.ExampleTimestampsByTs:output_type -> testpb.ExampleTimestampsByTsResponse
	29, // 77: testpb.TestSchemaQueryService.SimpleExample:output_type -> testpb.SimpleExampleResponse
	31, // 78: testpb.TestSchemaQueryService.SimpleExampleByUnique:output_type -> testpb.SimpleExampleByUniqueResponse
	33, // 79: testpb.TestSchemaQueryService.SimpleExamples:output_type -> testpb.SimpleExamplesResponse
	35, // 80: testpb.TestSchemaQueryService.SimpleExamplesByUnique:output_type -> testpb.SimpleExamplesByUniqueResponse
	37, // 81: testpb.TestSchemaQueryService.ExampleAutoIncFieldName:output_type -> testpb.ExampleAutoIncFieldNameResponse
	39, // 82: testpb.TestSchemaQueryService.ExampleAutoIncFieldNames:output_type -> testpb.ExampleAutoIncFieldNamesResponse
	63, // [63:83] is the sub-list for method output_type
	43, // [43:63] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_testpb_test_schema_query_proto_init() }
func file_testpb_test_schema_query_proto_init() {
	if File_testpb_test_schema_query_proto != nil {
		return
	}
	file_testpb_test_schema_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_testpb_test_schema_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTableByU64StrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTableByU64StrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesByU64StrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesByU64StrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesByStrU32Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesByStrU32Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesByBzStrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTablesByBzStrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTableByXRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTableByXResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTablesByXRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncrementTablesByXResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleSingletonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleSingletonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTimestampRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTimestampResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTimestampsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTimestampsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTimestampsByTsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleTimestampsByTsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExampleByUniqueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExampleByUniqueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExamplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExamplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExamplesByUniqueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleExamplesByUniqueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncFieldNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncFieldNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncFieldNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_test_schema_query_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleAutoIncFieldNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_testpb_test_schema_query_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_testpb_test_schema_query_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_testpb_test_schema_query_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_testpb_test_schema_query_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_testpb_test_schema_query_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_testpb_test_schema_query_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_testpb_test_schema_query_proto_msgTypes[34].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testpb_test_schema_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testpb_test_schema_query_proto_goTypes,
		DependencyIndexes: file_testpb_test_schema_query_proto_depIdxs,
		MessageInfos:      file_testpb_test_schema_query_proto_msgTypes,
	}.Build()
	File_testpb_test_schema_query_proto = out.File
	file_testpb_test_schema_query_proto_rawDesc = nil
	file_testpb_test_schema_query_proto_goTypes = nil
	file_testpb_test_schema_query_proto_depIdxs = nil
}
