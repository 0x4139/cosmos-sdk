// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: testpb/test_schema_query.proto

package testpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TestSchemaQueryServiceClient is the client API for TestSchemaQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TestSchemaQueryServiceClient interface {
	// ExampleTable queries the ExampleTable table by its primary key.
	ExampleTable(ctx context.Context, in *ExampleTableRequest, opts ...grpc.CallOption) (*ExampleTableResponse, error)
	// ExampleTableByU64Str queries the ExampleTable table by its U64Str index
	ExampleTableByU64Str(ctx context.Context, in *ExampleTableByU64StrRequest, opts ...grpc.CallOption) (*ExampleTableByU64StrResponse, error)
	// ExampleTables queries the ExampleTable table using the primary key index.
	ExampleTables(ctx context.Context, in *ExampleTablesRequest, opts ...grpc.CallOption) (*ExampleTablesResponse, error)
	// ExampleTablesByU64Str queries the ExampleTable table using the primary key index.
	ExampleTablesByU64Str(ctx context.Context, in *ExampleTablesByU64StrRequest, opts ...grpc.CallOption) (*ExampleTablesByU64StrResponse, error)
	// ExampleTablesByStrU32 queries the ExampleTable table using the primary key index.
	ExampleTablesByStrU32(ctx context.Context, in *ExampleTablesByStrU32Request, opts ...grpc.CallOption) (*ExampleTablesByStrU32Response, error)
	// ExampleTablesByBzStr queries the ExampleTable table using the primary key index.
	ExampleTablesByBzStr(ctx context.Context, in *ExampleTablesByBzStrRequest, opts ...grpc.CallOption) (*ExampleTablesByBzStrResponse, error)
	// ExampleAutoIncrementTable queries the ExampleAutoIncrementTable table by its primary key.
	ExampleAutoIncrementTable(ctx context.Context, in *ExampleAutoIncrementTableRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTableResponse, error)
	// ExampleAutoIncrementTableByX queries the ExampleAutoIncrementTable table by its X index
	ExampleAutoIncrementTableByX(ctx context.Context, in *ExampleAutoIncrementTableByXRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTableByXResponse, error)
	// ExampleAutoIncrementTables queries the ExampleAutoIncrementTable table using the primary key index.
	ExampleAutoIncrementTables(ctx context.Context, in *ExampleAutoIncrementTablesRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTablesResponse, error)
	// ExampleAutoIncrementTablesByX queries the ExampleAutoIncrementTable table using the primary key index.
	ExampleAutoIncrementTablesByX(ctx context.Context, in *ExampleAutoIncrementTablesByXRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTablesByXResponse, error)
	// ExampleSingleton queries the ExampleSingleton singleton.
	ExampleSingleton(ctx context.Context, in *ExampleSingletonRequest, opts ...grpc.CallOption) (*ExampleSingletonResponse, error)
	// ExampleTimestamp queries the ExampleTimestamp table by its primary key.
	ExampleTimestamp(ctx context.Context, in *ExampleTimestampRequest, opts ...grpc.CallOption) (*ExampleTimestampResponse, error)
	// ExampleTimestamps queries the ExampleTimestamp table using the primary key index.
	ExampleTimestamps(ctx context.Context, in *ExampleTimestampsRequest, opts ...grpc.CallOption) (*ExampleTimestampsResponse, error)
	// ExampleTimestampsByTs queries the ExampleTimestamp table using the primary key index.
	ExampleTimestampsByTs(ctx context.Context, in *ExampleTimestampsByTsRequest, opts ...grpc.CallOption) (*ExampleTimestampsByTsResponse, error)
	// SimpleExample queries the SimpleExample table by its primary key.
	SimpleExample(ctx context.Context, in *SimpleExampleRequest, opts ...grpc.CallOption) (*SimpleExampleResponse, error)
	// SimpleExampleByUnique queries the SimpleExample table by its Unique index
	SimpleExampleByUnique(ctx context.Context, in *SimpleExampleByUniqueRequest, opts ...grpc.CallOption) (*SimpleExampleByUniqueResponse, error)
	// SimpleExamples queries the SimpleExample table using the primary key index.
	SimpleExamples(ctx context.Context, in *SimpleExamplesRequest, opts ...grpc.CallOption) (*SimpleExamplesResponse, error)
	// SimpleExamplesByUnique queries the SimpleExample table using the primary key index.
	SimpleExamplesByUnique(ctx context.Context, in *SimpleExamplesByUniqueRequest, opts ...grpc.CallOption) (*SimpleExamplesByUniqueResponse, error)
	// ExampleAutoIncFieldName queries the ExampleAutoIncFieldName table by its primary key.
	ExampleAutoIncFieldName(ctx context.Context, in *ExampleAutoIncFieldNameRequest, opts ...grpc.CallOption) (*ExampleAutoIncFieldNameResponse, error)
	// ExampleAutoIncFieldNames queries the ExampleAutoIncFieldName table using the primary key index.
	ExampleAutoIncFieldNames(ctx context.Context, in *ExampleAutoIncFieldNamesRequest, opts ...grpc.CallOption) (*ExampleAutoIncFieldNamesResponse, error)
}

type testSchemaQueryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTestSchemaQueryServiceClient(cc grpc.ClientConnInterface) TestSchemaQueryServiceClient {
	return &testSchemaQueryServiceClient{cc}
}

func (c *testSchemaQueryServiceClient) ExampleTable(ctx context.Context, in *ExampleTableRequest, opts ...grpc.CallOption) (*ExampleTableResponse, error) {
	out := new(ExampleTableResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTableByU64Str(ctx context.Context, in *ExampleTableByU64StrRequest, opts ...grpc.CallOption) (*ExampleTableByU64StrResponse, error) {
	out := new(ExampleTableByU64StrResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTableByU64Str", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTables(ctx context.Context, in *ExampleTablesRequest, opts ...grpc.CallOption) (*ExampleTablesResponse, error) {
	out := new(ExampleTablesResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTablesByU64Str(ctx context.Context, in *ExampleTablesByU64StrRequest, opts ...grpc.CallOption) (*ExampleTablesByU64StrResponse, error) {
	out := new(ExampleTablesByU64StrResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTablesByU64Str", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTablesByStrU32(ctx context.Context, in *ExampleTablesByStrU32Request, opts ...grpc.CallOption) (*ExampleTablesByStrU32Response, error) {
	out := new(ExampleTablesByStrU32Response)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTablesByStrU32", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTablesByBzStr(ctx context.Context, in *ExampleTablesByBzStrRequest, opts ...grpc.CallOption) (*ExampleTablesByBzStrResponse, error) {
	out := new(ExampleTablesByBzStrResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTablesByBzStr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleAutoIncrementTable(ctx context.Context, in *ExampleAutoIncrementTableRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTableResponse, error) {
	out := new(ExampleAutoIncrementTableResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleAutoIncrementTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleAutoIncrementTableByX(ctx context.Context, in *ExampleAutoIncrementTableByXRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTableByXResponse, error) {
	out := new(ExampleAutoIncrementTableByXResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleAutoIncrementTableByX", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleAutoIncrementTables(ctx context.Context, in *ExampleAutoIncrementTablesRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTablesResponse, error) {
	out := new(ExampleAutoIncrementTablesResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleAutoIncrementTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleAutoIncrementTablesByX(ctx context.Context, in *ExampleAutoIncrementTablesByXRequest, opts ...grpc.CallOption) (*ExampleAutoIncrementTablesByXResponse, error) {
	out := new(ExampleAutoIncrementTablesByXResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleAutoIncrementTablesByX", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleSingleton(ctx context.Context, in *ExampleSingletonRequest, opts ...grpc.CallOption) (*ExampleSingletonResponse, error) {
	out := new(ExampleSingletonResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleSingleton", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTimestamp(ctx context.Context, in *ExampleTimestampRequest, opts ...grpc.CallOption) (*ExampleTimestampResponse, error) {
	out := new(ExampleTimestampResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTimestamp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTimestamps(ctx context.Context, in *ExampleTimestampsRequest, opts ...grpc.CallOption) (*ExampleTimestampsResponse, error) {
	out := new(ExampleTimestampsResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTimestamps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleTimestampsByTs(ctx context.Context, in *ExampleTimestampsByTsRequest, opts ...grpc.CallOption) (*ExampleTimestampsByTsResponse, error) {
	out := new(ExampleTimestampsByTsResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleTimestampsByTs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) SimpleExample(ctx context.Context, in *SimpleExampleRequest, opts ...grpc.CallOption) (*SimpleExampleResponse, error) {
	out := new(SimpleExampleResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/SimpleExample", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) SimpleExampleByUnique(ctx context.Context, in *SimpleExampleByUniqueRequest, opts ...grpc.CallOption) (*SimpleExampleByUniqueResponse, error) {
	out := new(SimpleExampleByUniqueResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/SimpleExampleByUnique", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) SimpleExamples(ctx context.Context, in *SimpleExamplesRequest, opts ...grpc.CallOption) (*SimpleExamplesResponse, error) {
	out := new(SimpleExamplesResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/SimpleExamples", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) SimpleExamplesByUnique(ctx context.Context, in *SimpleExamplesByUniqueRequest, opts ...grpc.CallOption) (*SimpleExamplesByUniqueResponse, error) {
	out := new(SimpleExamplesByUniqueResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/SimpleExamplesByUnique", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleAutoIncFieldName(ctx context.Context, in *ExampleAutoIncFieldNameRequest, opts ...grpc.CallOption) (*ExampleAutoIncFieldNameResponse, error) {
	out := new(ExampleAutoIncFieldNameResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleAutoIncFieldName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testSchemaQueryServiceClient) ExampleAutoIncFieldNames(ctx context.Context, in *ExampleAutoIncFieldNamesRequest, opts ...grpc.CallOption) (*ExampleAutoIncFieldNamesResponse, error) {
	out := new(ExampleAutoIncFieldNamesResponse)
	err := c.cc.Invoke(ctx, "/testpb.TestSchemaQueryService/ExampleAutoIncFieldNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestSchemaQueryServiceServer is the server API for TestSchemaQueryService service.
// All implementations must embed UnimplementedTestSchemaQueryServiceServer
// for forward compatibility
type TestSchemaQueryServiceServer interface {
	// ExampleTable queries the ExampleTable table by its primary key.
	ExampleTable(context.Context, *ExampleTableRequest) (*ExampleTableResponse, error)
	// ExampleTableByU64Str queries the ExampleTable table by its U64Str index
	ExampleTableByU64Str(context.Context, *ExampleTableByU64StrRequest) (*ExampleTableByU64StrResponse, error)
	// ExampleTables queries the ExampleTable table using the primary key index.
	ExampleTables(context.Context, *ExampleTablesRequest) (*ExampleTablesResponse, error)
	// ExampleTablesByU64Str queries the ExampleTable table using the primary key index.
	ExampleTablesByU64Str(context.Context, *ExampleTablesByU64StrRequest) (*ExampleTablesByU64StrResponse, error)
	// ExampleTablesByStrU32 queries the ExampleTable table using the primary key index.
	ExampleTablesByStrU32(context.Context, *ExampleTablesByStrU32Request) (*ExampleTablesByStrU32Response, error)
	// ExampleTablesByBzStr queries the ExampleTable table using the primary key index.
	ExampleTablesByBzStr(context.Context, *ExampleTablesByBzStrRequest) (*ExampleTablesByBzStrResponse, error)
	// ExampleAutoIncrementTable queries the ExampleAutoIncrementTable table by its primary key.
	ExampleAutoIncrementTable(context.Context, *ExampleAutoIncrementTableRequest) (*ExampleAutoIncrementTableResponse, error)
	// ExampleAutoIncrementTableByX queries the ExampleAutoIncrementTable table by its X index
	ExampleAutoIncrementTableByX(context.Context, *ExampleAutoIncrementTableByXRequest) (*ExampleAutoIncrementTableByXResponse, error)
	// ExampleAutoIncrementTables queries the ExampleAutoIncrementTable table using the primary key index.
	ExampleAutoIncrementTables(context.Context, *ExampleAutoIncrementTablesRequest) (*ExampleAutoIncrementTablesResponse, error)
	// ExampleAutoIncrementTablesByX queries the ExampleAutoIncrementTable table using the primary key index.
	ExampleAutoIncrementTablesByX(context.Context, *ExampleAutoIncrementTablesByXRequest) (*ExampleAutoIncrementTablesByXResponse, error)
	// ExampleSingleton queries the ExampleSingleton singleton.
	ExampleSingleton(context.Context, *ExampleSingletonRequest) (*ExampleSingletonResponse, error)
	// ExampleTimestamp queries the ExampleTimestamp table by its primary key.
	ExampleTimestamp(context.Context, *ExampleTimestampRequest) (*ExampleTimestampResponse, error)
	// ExampleTimestamps queries the ExampleTimestamp table using the primary key index.
	ExampleTimestamps(context.Context, *ExampleTimestampsRequest) (*ExampleTimestampsResponse, error)
	// ExampleTimestampsByTs queries the ExampleTimestamp table using the primary key index.
	ExampleTimestampsByTs(context.Context, *ExampleTimestampsByTsRequest) (*ExampleTimestampsByTsResponse, error)
	// SimpleExample queries the SimpleExample table by its primary key.
	SimpleExample(context.Context, *SimpleExampleRequest) (*SimpleExampleResponse, error)
	// SimpleExampleByUnique queries the SimpleExample table by its Unique index
	SimpleExampleByUnique(context.Context, *SimpleExampleByUniqueRequest) (*SimpleExampleByUniqueResponse, error)
	// SimpleExamples queries the SimpleExample table using the primary key index.
	SimpleExamples(context.Context, *SimpleExamplesRequest) (*SimpleExamplesResponse, error)
	// SimpleExamplesByUnique queries the SimpleExample table using the primary key index.
	SimpleExamplesByUnique(context.Context, *SimpleExamplesByUniqueRequest) (*SimpleExamplesByUniqueResponse, error)
	// ExampleAutoIncFieldName queries the ExampleAutoIncFieldName table by its primary key.
	ExampleAutoIncFieldName(context.Context, *ExampleAutoIncFieldNameRequest) (*ExampleAutoIncFieldNameResponse, error)
	// ExampleAutoIncFieldNames queries the ExampleAutoIncFieldName table using the primary key index.
	ExampleAutoIncFieldNames(context.Context, *ExampleAutoIncFieldNamesRequest) (*ExampleAutoIncFieldNamesResponse, error)
	mustEmbedUnimplementedTestSchemaQueryServiceServer()
}

// UnimplementedTestSchemaQueryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTestSchemaQueryServiceServer struct {
}

func (UnimplementedTestSchemaQueryServiceServer) ExampleTable(context.Context, *ExampleTableRequest) (*ExampleTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTable not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTableByU64Str(context.Context, *ExampleTableByU64StrRequest) (*ExampleTableByU64StrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTableByU64Str not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTables(context.Context, *ExampleTablesRequest) (*ExampleTablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTables not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTablesByU64Str(context.Context, *ExampleTablesByU64StrRequest) (*ExampleTablesByU64StrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTablesByU64Str not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTablesByStrU32(context.Context, *ExampleTablesByStrU32Request) (*ExampleTablesByStrU32Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTablesByStrU32 not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTablesByBzStr(context.Context, *ExampleTablesByBzStrRequest) (*ExampleTablesByBzStrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTablesByBzStr not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleAutoIncrementTable(context.Context, *ExampleAutoIncrementTableRequest) (*ExampleAutoIncrementTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleAutoIncrementTable not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleAutoIncrementTableByX(context.Context, *ExampleAutoIncrementTableByXRequest) (*ExampleAutoIncrementTableByXResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleAutoIncrementTableByX not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleAutoIncrementTables(context.Context, *ExampleAutoIncrementTablesRequest) (*ExampleAutoIncrementTablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleAutoIncrementTables not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleAutoIncrementTablesByX(context.Context, *ExampleAutoIncrementTablesByXRequest) (*ExampleAutoIncrementTablesByXResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleAutoIncrementTablesByX not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleSingleton(context.Context, *ExampleSingletonRequest) (*ExampleSingletonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleSingleton not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTimestamp(context.Context, *ExampleTimestampRequest) (*ExampleTimestampResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTimestamp not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTimestamps(context.Context, *ExampleTimestampsRequest) (*ExampleTimestampsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTimestamps not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleTimestampsByTs(context.Context, *ExampleTimestampsByTsRequest) (*ExampleTimestampsByTsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleTimestampsByTs not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) SimpleExample(context.Context, *SimpleExampleRequest) (*SimpleExampleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SimpleExample not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) SimpleExampleByUnique(context.Context, *SimpleExampleByUniqueRequest) (*SimpleExampleByUniqueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SimpleExampleByUnique not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) SimpleExamples(context.Context, *SimpleExamplesRequest) (*SimpleExamplesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SimpleExamples not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) SimpleExamplesByUnique(context.Context, *SimpleExamplesByUniqueRequest) (*SimpleExamplesByUniqueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SimpleExamplesByUnique not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleAutoIncFieldName(context.Context, *ExampleAutoIncFieldNameRequest) (*ExampleAutoIncFieldNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleAutoIncFieldName not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) ExampleAutoIncFieldNames(context.Context, *ExampleAutoIncFieldNamesRequest) (*ExampleAutoIncFieldNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleAutoIncFieldNames not implemented")
}
func (UnimplementedTestSchemaQueryServiceServer) mustEmbedUnimplementedTestSchemaQueryServiceServer() {
}

// UnsafeTestSchemaQueryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TestSchemaQueryServiceServer will
// result in compilation errors.
type UnsafeTestSchemaQueryServiceServer interface {
	mustEmbedUnimplementedTestSchemaQueryServiceServer()
}

func RegisterTestSchemaQueryServiceServer(s grpc.ServiceRegistrar, srv TestSchemaQueryServiceServer) {
	s.RegisterService(&TestSchemaQueryService_ServiceDesc, srv)
}

func _TestSchemaQueryService_ExampleTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTable(ctx, req.(*ExampleTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTableByU64Str_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTableByU64StrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTableByU64Str(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTableByU64Str",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTableByU64Str(ctx, req.(*ExampleTableByU64StrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTables(ctx, req.(*ExampleTablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTablesByU64Str_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTablesByU64StrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTablesByU64Str(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTablesByU64Str",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTablesByU64Str(ctx, req.(*ExampleTablesByU64StrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTablesByStrU32_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTablesByStrU32Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTablesByStrU32(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTablesByStrU32",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTablesByStrU32(ctx, req.(*ExampleTablesByStrU32Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTablesByBzStr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTablesByBzStrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTablesByBzStr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTablesByBzStr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTablesByBzStr(ctx, req.(*ExampleTablesByBzStrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleAutoIncrementTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleAutoIncrementTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleAutoIncrementTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTable(ctx, req.(*ExampleAutoIncrementTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleAutoIncrementTableByX_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleAutoIncrementTableByXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTableByX(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleAutoIncrementTableByX",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTableByX(ctx, req.(*ExampleAutoIncrementTableByXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleAutoIncrementTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleAutoIncrementTablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleAutoIncrementTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTables(ctx, req.(*ExampleAutoIncrementTablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleAutoIncrementTablesByX_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleAutoIncrementTablesByXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTablesByX(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleAutoIncrementTablesByX",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncrementTablesByX(ctx, req.(*ExampleAutoIncrementTablesByXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleSingleton_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleSingletonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleSingleton(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleSingleton",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleSingleton(ctx, req.(*ExampleSingletonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTimestamp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTimestampRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTimestamp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTimestamp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTimestamp(ctx, req.(*ExampleTimestampRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTimestamps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTimestampsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTimestamps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTimestamps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTimestamps(ctx, req.(*ExampleTimestampsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleTimestampsByTs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleTimestampsByTsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleTimestampsByTs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleTimestampsByTs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleTimestampsByTs(ctx, req.(*ExampleTimestampsByTsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_SimpleExample_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).SimpleExample(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/SimpleExample",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).SimpleExample(ctx, req.(*SimpleExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_SimpleExampleByUnique_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleExampleByUniqueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).SimpleExampleByUnique(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/SimpleExampleByUnique",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).SimpleExampleByUnique(ctx, req.(*SimpleExampleByUniqueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_SimpleExamples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleExamplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).SimpleExamples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/SimpleExamples",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).SimpleExamples(ctx, req.(*SimpleExamplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_SimpleExamplesByUnique_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleExamplesByUniqueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).SimpleExamplesByUnique(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/SimpleExamplesByUnique",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).SimpleExamplesByUnique(ctx, req.(*SimpleExamplesByUniqueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleAutoIncFieldName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleAutoIncFieldNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncFieldName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleAutoIncFieldName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncFieldName(ctx, req.(*ExampleAutoIncFieldNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestSchemaQueryService_ExampleAutoIncFieldNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleAutoIncFieldNamesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncFieldNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpb.TestSchemaQueryService/ExampleAutoIncFieldNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestSchemaQueryServiceServer).ExampleAutoIncFieldNames(ctx, req.(*ExampleAutoIncFieldNamesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TestSchemaQueryService_ServiceDesc is the grpc.ServiceDesc for TestSchemaQueryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TestSchemaQueryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "testpb.TestSchemaQueryService",
	HandlerType: (*TestSchemaQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExampleTable",
			Handler:    _TestSchemaQueryService_ExampleTable_Handler,
		},
		{
			MethodName: "ExampleTableByU64Str",
			Handler:    _TestSchemaQueryService_ExampleTableByU64Str_Handler,
		},
		{
			MethodName: "ExampleTables",
			Handler:    _TestSchemaQueryService_ExampleTables_Handler,
		},
		{
			MethodName: "ExampleTablesByU64Str",
			Handler:    _TestSchemaQueryService_ExampleTablesByU64Str_Handler,
		},
		{
			MethodName: "ExampleTablesByStrU32",
			Handler:    _TestSchemaQueryService_ExampleTablesByStrU32_Handler,
		},
		{
			MethodName: "ExampleTablesByBzStr",
			Handler:    _TestSchemaQueryService_ExampleTablesByBzStr_Handler,
		},
		{
			MethodName: "ExampleAutoIncrementTable",
			Handler:    _TestSchemaQueryService_ExampleAutoIncrementTable_Handler,
		},
		{
			MethodName: "ExampleAutoIncrementTableByX",
			Handler:    _TestSchemaQueryService_ExampleAutoIncrementTableByX_Handler,
		},
		{
			MethodName: "ExampleAutoIncrementTables",
			Handler:    _TestSchemaQueryService_ExampleAutoIncrementTables_Handler,
		},
		{
			MethodName: "ExampleAutoIncrementTablesByX",
			Handler:    _TestSchemaQueryService_ExampleAutoIncrementTablesByX_Handler,
		},
		{
			MethodName: "ExampleSingleton",
			Handler:    _TestSchemaQueryService_ExampleSingleton_Handler,
		},
		{
			MethodName: "ExampleTimestamp",
			Handler:    _TestSchemaQueryService_ExampleTimestamp_Handler,
		},
		{
			MethodName: "ExampleTimestamps",
			Handler:    _TestSchemaQueryService_ExampleTimestamps_Handler,
		},
		{
			MethodName: "ExampleTimestampsByTs",
			Handler:    _TestSchemaQueryService_ExampleTimestampsByTs_Handler,
		},
		{
			MethodName: "SimpleExample",
			Handler:    _TestSchemaQueryService_SimpleExample_Handler,
		},
		{
			MethodName: "SimpleExampleByUnique",
			Handler:    _TestSchemaQueryService_SimpleExampleByUnique_Handler,
		},
		{
			MethodName: "SimpleExamples",
			Handler:    _TestSchemaQueryService_SimpleExamples_Handler,
		},
		{
			MethodName: "SimpleExamplesByUnique",
			Handler:    _TestSchemaQueryService_SimpleExamplesByUnique_Handler,
		},
		{
			MethodName: "ExampleAutoIncFieldName",
			Handler:    _TestSchemaQueryService_ExampleAutoIncFieldName_Handler,
		},
		{
			MethodName: "ExampleAutoIncFieldNames",
			Handler:    _TestSchemaQueryService_ExampleAutoIncFieldNames_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "testpb/test_schema_query.proto",
}
