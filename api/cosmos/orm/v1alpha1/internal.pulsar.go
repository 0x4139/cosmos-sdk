// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package ormv1alpha1

import (
	v1 "cosmossdk.io/api/cosmos/orm/v1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_ModuleSchemaRecord_2_list)(nil)

type _ModuleSchemaRecord_2_list struct {
	list *[]*ModuleSchemaRecord_FileRecord
}

func (x *_ModuleSchemaRecord_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ModuleSchemaRecord_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ModuleSchemaRecord_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ModuleSchemaRecord_FileRecord)
	(*x.list)[i] = concreteValue
}

func (x *_ModuleSchemaRecord_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ModuleSchemaRecord_FileRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ModuleSchemaRecord_2_list) AppendMutable() protoreflect.Value {
	v := new(ModuleSchemaRecord_FileRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ModuleSchemaRecord_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ModuleSchemaRecord_2_list) NewElement() protoreflect.Value {
	v := new(ModuleSchemaRecord_FileRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ModuleSchemaRecord_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ModuleSchemaRecord         protoreflect.MessageDescriptor
	fd_ModuleSchemaRecord_version protoreflect.FieldDescriptor
	fd_ModuleSchemaRecord_files   protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_orm_v1alpha1_internal_proto_init()
	md_ModuleSchemaRecord = File_cosmos_orm_v1alpha1_internal_proto.Messages().ByName("ModuleSchemaRecord")
	fd_ModuleSchemaRecord_version = md_ModuleSchemaRecord.Fields().ByName("version")
	fd_ModuleSchemaRecord_files = md_ModuleSchemaRecord.Fields().ByName("files")
}

var _ protoreflect.Message = (*fastReflection_ModuleSchemaRecord)(nil)

type fastReflection_ModuleSchemaRecord ModuleSchemaRecord

func (x *ModuleSchemaRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ModuleSchemaRecord)(x)
}

func (x *ModuleSchemaRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_orm_v1alpha1_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ModuleSchemaRecord_messageType fastReflection_ModuleSchemaRecord_messageType
var _ protoreflect.MessageType = fastReflection_ModuleSchemaRecord_messageType{}

type fastReflection_ModuleSchemaRecord_messageType struct{}

func (x fastReflection_ModuleSchemaRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ModuleSchemaRecord)(nil)
}
func (x fastReflection_ModuleSchemaRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_ModuleSchemaRecord)
}
func (x fastReflection_ModuleSchemaRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ModuleSchemaRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ModuleSchemaRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_ModuleSchemaRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ModuleSchemaRecord) Type() protoreflect.MessageType {
	return _fastReflection_ModuleSchemaRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ModuleSchemaRecord) New() protoreflect.Message {
	return new(fastReflection_ModuleSchemaRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ModuleSchemaRecord) Interface() protoreflect.ProtoMessage {
	return (*ModuleSchemaRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ModuleSchemaRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Version != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Version)
		if !f(fd_ModuleSchemaRecord_version, value) {
			return
		}
	}
	if len(x.Files) != 0 {
		value := protoreflect.ValueOfList(&_ModuleSchemaRecord_2_list{list: &x.Files})
		if !f(fd_ModuleSchemaRecord_files, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ModuleSchemaRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.version":
		return x.Version != uint64(0)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.files":
		return len(x.Files) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.version":
		x.Version = uint64(0)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.files":
		x.Files = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ModuleSchemaRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.version":
		value := x.Version
		return protoreflect.ValueOfUint64(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.files":
		if len(x.Files) == 0 {
			return protoreflect.ValueOfList(&_ModuleSchemaRecord_2_list{})
		}
		listValue := &_ModuleSchemaRecord_2_list{list: &x.Files}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.version":
		x.Version = value.Uint()
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.files":
		lv := value.List()
		clv := lv.(*_ModuleSchemaRecord_2_list)
		x.Files = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.files":
		if x.Files == nil {
			x.Files = []*ModuleSchemaRecord_FileRecord{}
		}
		value := &_ModuleSchemaRecord_2_list{list: &x.Files}
		return protoreflect.ValueOfList(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.version":
		panic(fmt.Errorf("field version of message cosmos.orm.v1alpha1.ModuleSchemaRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ModuleSchemaRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.version":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.files":
		list := []*ModuleSchemaRecord_FileRecord{}
		return protoreflect.ValueOfList(&_ModuleSchemaRecord_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ModuleSchemaRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.orm.v1alpha1.ModuleSchemaRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ModuleSchemaRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ModuleSchemaRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ModuleSchemaRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ModuleSchemaRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if len(x.Files) > 0 {
			for _, e := range x.Files {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ModuleSchemaRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Files) > 0 {
			for iNdEx := len(x.Files) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Files[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ModuleSchemaRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ModuleSchemaRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ModuleSchemaRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Files", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Files = append(x.Files, &ModuleSchemaRecord_FileRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Files[len(x.Files)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ModuleSchemaRecord_FileRecord_3_list)(nil)

type _ModuleSchemaRecord_FileRecord_3_list struct {
	list *[]*ModuleSchemaRecord_TableRecord
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ModuleSchemaRecord_TableRecord)
	(*x.list)[i] = concreteValue
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ModuleSchemaRecord_TableRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) AppendMutable() protoreflect.Value {
	v := new(ModuleSchemaRecord_TableRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) NewElement() protoreflect.Value {
	v := new(ModuleSchemaRecord_TableRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ModuleSchemaRecord_FileRecord_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ModuleSchemaRecord_FileRecord                 protoreflect.MessageDescriptor
	fd_ModuleSchemaRecord_FileRecord_id              protoreflect.FieldDescriptor
	fd_ModuleSchemaRecord_FileRecord_proto_file_path protoreflect.FieldDescriptor
	fd_ModuleSchemaRecord_FileRecord_tables          protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_orm_v1alpha1_internal_proto_init()
	md_ModuleSchemaRecord_FileRecord = File_cosmos_orm_v1alpha1_internal_proto.Messages().ByName("ModuleSchemaRecord").Messages().ByName("FileRecord")
	fd_ModuleSchemaRecord_FileRecord_id = md_ModuleSchemaRecord_FileRecord.Fields().ByName("id")
	fd_ModuleSchemaRecord_FileRecord_proto_file_path = md_ModuleSchemaRecord_FileRecord.Fields().ByName("proto_file_path")
	fd_ModuleSchemaRecord_FileRecord_tables = md_ModuleSchemaRecord_FileRecord.Fields().ByName("tables")
}

var _ protoreflect.Message = (*fastReflection_ModuleSchemaRecord_FileRecord)(nil)

type fastReflection_ModuleSchemaRecord_FileRecord ModuleSchemaRecord_FileRecord

func (x *ModuleSchemaRecord_FileRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ModuleSchemaRecord_FileRecord)(x)
}

func (x *ModuleSchemaRecord_FileRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_orm_v1alpha1_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ModuleSchemaRecord_FileRecord_messageType fastReflection_ModuleSchemaRecord_FileRecord_messageType
var _ protoreflect.MessageType = fastReflection_ModuleSchemaRecord_FileRecord_messageType{}

type fastReflection_ModuleSchemaRecord_FileRecord_messageType struct{}

func (x fastReflection_ModuleSchemaRecord_FileRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ModuleSchemaRecord_FileRecord)(nil)
}
func (x fastReflection_ModuleSchemaRecord_FileRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_ModuleSchemaRecord_FileRecord)
}
func (x fastReflection_ModuleSchemaRecord_FileRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ModuleSchemaRecord_FileRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_ModuleSchemaRecord_FileRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Type() protoreflect.MessageType {
	return _fastReflection_ModuleSchemaRecord_FileRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) New() protoreflect.Message {
	return new(fastReflection_ModuleSchemaRecord_FileRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Interface() protoreflect.ProtoMessage {
	return (*ModuleSchemaRecord_FileRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Id)
		if !f(fd_ModuleSchemaRecord_FileRecord_id, value) {
			return
		}
	}
	if x.ProtoFilePath != "" {
		value := protoreflect.ValueOfString(x.ProtoFilePath)
		if !f(fd_ModuleSchemaRecord_FileRecord_proto_file_path, value) {
			return
		}
	}
	if len(x.Tables) != 0 {
		value := protoreflect.ValueOfList(&_ModuleSchemaRecord_FileRecord_3_list{list: &x.Tables})
		if !f(fd_ModuleSchemaRecord_FileRecord_tables, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.id":
		return x.Id != uint32(0)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.proto_file_path":
		return x.ProtoFilePath != ""
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables":
		return len(x.Tables) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.id":
		x.Id = uint32(0)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.proto_file_path":
		x.ProtoFilePath = ""
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables":
		x.Tables = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.id":
		value := x.Id
		return protoreflect.ValueOfUint32(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.proto_file_path":
		value := x.ProtoFilePath
		return protoreflect.ValueOfString(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables":
		if len(x.Tables) == 0 {
			return protoreflect.ValueOfList(&_ModuleSchemaRecord_FileRecord_3_list{})
		}
		listValue := &_ModuleSchemaRecord_FileRecord_3_list{list: &x.Tables}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.id":
		x.Id = uint32(value.Uint())
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.proto_file_path":
		x.ProtoFilePath = value.Interface().(string)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables":
		lv := value.List()
		clv := lv.(*_ModuleSchemaRecord_FileRecord_3_list)
		x.Tables = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables":
		if x.Tables == nil {
			x.Tables = []*ModuleSchemaRecord_TableRecord{}
		}
		value := &_ModuleSchemaRecord_FileRecord_3_list{list: &x.Tables}
		return protoreflect.ValueOfList(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.id":
		panic(fmt.Errorf("field id of message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord is not mutable"))
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.proto_file_path":
		panic(fmt.Errorf("field proto_file_path of message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.proto_file_path":
		return protoreflect.ValueOfString("")
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables":
		list := []*ModuleSchemaRecord_TableRecord{}
		return protoreflect.ValueOfList(&_ModuleSchemaRecord_FileRecord_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ModuleSchemaRecord_FileRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ModuleSchemaRecord_FileRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.ProtoFilePath)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Tables) > 0 {
			for _, e := range x.Tables {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ModuleSchemaRecord_FileRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Tables) > 0 {
			for iNdEx := len(x.Tables) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Tables[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.ProtoFilePath) > 0 {
			i -= len(x.ProtoFilePath)
			copy(dAtA[i:], x.ProtoFilePath)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProtoFilePath)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ModuleSchemaRecord_FileRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ModuleSchemaRecord_FileRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ModuleSchemaRecord_FileRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtoFilePath", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProtoFilePath = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tables", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Tables = append(x.Tables, &ModuleSchemaRecord_TableRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Tables[len(x.Tables)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ModuleSchemaRecord_TableRecord                protoreflect.MessageDescriptor
	fd_ModuleSchemaRecord_TableRecord_id             protoreflect.FieldDescriptor
	fd_ModuleSchemaRecord_TableRecord_proto_msg_name protoreflect.FieldDescriptor
	fd_ModuleSchemaRecord_TableRecord_table          protoreflect.FieldDescriptor
	fd_ModuleSchemaRecord_TableRecord_singleton      protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_orm_v1alpha1_internal_proto_init()
	md_ModuleSchemaRecord_TableRecord = File_cosmos_orm_v1alpha1_internal_proto.Messages().ByName("ModuleSchemaRecord").Messages().ByName("TableRecord")
	fd_ModuleSchemaRecord_TableRecord_id = md_ModuleSchemaRecord_TableRecord.Fields().ByName("id")
	fd_ModuleSchemaRecord_TableRecord_proto_msg_name = md_ModuleSchemaRecord_TableRecord.Fields().ByName("proto_msg_name")
	fd_ModuleSchemaRecord_TableRecord_table = md_ModuleSchemaRecord_TableRecord.Fields().ByName("table")
	fd_ModuleSchemaRecord_TableRecord_singleton = md_ModuleSchemaRecord_TableRecord.Fields().ByName("singleton")
}

var _ protoreflect.Message = (*fastReflection_ModuleSchemaRecord_TableRecord)(nil)

type fastReflection_ModuleSchemaRecord_TableRecord ModuleSchemaRecord_TableRecord

func (x *ModuleSchemaRecord_TableRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ModuleSchemaRecord_TableRecord)(x)
}

func (x *ModuleSchemaRecord_TableRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_orm_v1alpha1_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ModuleSchemaRecord_TableRecord_messageType fastReflection_ModuleSchemaRecord_TableRecord_messageType
var _ protoreflect.MessageType = fastReflection_ModuleSchemaRecord_TableRecord_messageType{}

type fastReflection_ModuleSchemaRecord_TableRecord_messageType struct{}

func (x fastReflection_ModuleSchemaRecord_TableRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ModuleSchemaRecord_TableRecord)(nil)
}
func (x fastReflection_ModuleSchemaRecord_TableRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_ModuleSchemaRecord_TableRecord)
}
func (x fastReflection_ModuleSchemaRecord_TableRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ModuleSchemaRecord_TableRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_ModuleSchemaRecord_TableRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Type() protoreflect.MessageType {
	return _fastReflection_ModuleSchemaRecord_TableRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) New() protoreflect.Message {
	return new(fastReflection_ModuleSchemaRecord_TableRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Interface() protoreflect.ProtoMessage {
	return (*ModuleSchemaRecord_TableRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Id)
		if !f(fd_ModuleSchemaRecord_TableRecord_id, value) {
			return
		}
	}
	if x.ProtoMsgName != "" {
		value := protoreflect.ValueOfString(x.ProtoMsgName)
		if !f(fd_ModuleSchemaRecord_TableRecord_proto_msg_name, value) {
			return
		}
	}
	if x.Desc != nil {
		switch o := x.Desc.(type) {
		case *ModuleSchemaRecord_TableRecord_Table:
			v := o.Table
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_ModuleSchemaRecord_TableRecord_table, value) {
				return
			}
		case *ModuleSchemaRecord_TableRecord_Singleton:
			v := o.Singleton
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_ModuleSchemaRecord_TableRecord_singleton, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.id":
		return x.Id != uint32(0)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.proto_msg_name":
		return x.ProtoMsgName != ""
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table":
		if x.Desc == nil {
			return false
		} else if _, ok := x.Desc.(*ModuleSchemaRecord_TableRecord_Table); ok {
			return true
		} else {
			return false
		}
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton":
		if x.Desc == nil {
			return false
		} else if _, ok := x.Desc.(*ModuleSchemaRecord_TableRecord_Singleton); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.id":
		x.Id = uint32(0)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.proto_msg_name":
		x.ProtoMsgName = ""
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table":
		x.Desc = nil
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton":
		x.Desc = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.id":
		value := x.Id
		return protoreflect.ValueOfUint32(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.proto_msg_name":
		value := x.ProtoMsgName
		return protoreflect.ValueOfString(value)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table":
		if x.Desc == nil {
			return protoreflect.ValueOfMessage((*v1.TableDescriptor)(nil).ProtoReflect())
		} else if v, ok := x.Desc.(*ModuleSchemaRecord_TableRecord_Table); ok {
			return protoreflect.ValueOfMessage(v.Table.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*v1.TableDescriptor)(nil).ProtoReflect())
		}
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton":
		if x.Desc == nil {
			return protoreflect.ValueOfMessage((*v1.SingletonDescriptor)(nil).ProtoReflect())
		} else if v, ok := x.Desc.(*ModuleSchemaRecord_TableRecord_Singleton); ok {
			return protoreflect.ValueOfMessage(v.Singleton.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*v1.SingletonDescriptor)(nil).ProtoReflect())
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.id":
		x.Id = uint32(value.Uint())
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.proto_msg_name":
		x.ProtoMsgName = value.Interface().(string)
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table":
		cv := value.Message().Interface().(*v1.TableDescriptor)
		x.Desc = &ModuleSchemaRecord_TableRecord_Table{Table: cv}
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton":
		cv := value.Message().Interface().(*v1.SingletonDescriptor)
		x.Desc = &ModuleSchemaRecord_TableRecord_Singleton{Singleton: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table":
		if x.Desc == nil {
			value := &v1.TableDescriptor{}
			oneofValue := &ModuleSchemaRecord_TableRecord_Table{Table: value}
			x.Desc = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Desc.(type) {
		case *ModuleSchemaRecord_TableRecord_Table:
			return protoreflect.ValueOfMessage(m.Table.ProtoReflect())
		default:
			value := &v1.TableDescriptor{}
			oneofValue := &ModuleSchemaRecord_TableRecord_Table{Table: value}
			x.Desc = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton":
		if x.Desc == nil {
			value := &v1.SingletonDescriptor{}
			oneofValue := &ModuleSchemaRecord_TableRecord_Singleton{Singleton: value}
			x.Desc = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Desc.(type) {
		case *ModuleSchemaRecord_TableRecord_Singleton:
			return protoreflect.ValueOfMessage(m.Singleton.ProtoReflect())
		default:
			value := &v1.SingletonDescriptor{}
			oneofValue := &ModuleSchemaRecord_TableRecord_Singleton{Singleton: value}
			x.Desc = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.id":
		panic(fmt.Errorf("field id of message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord is not mutable"))
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.proto_msg_name":
		panic(fmt.Errorf("field proto_msg_name of message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.proto_msg_name":
		return protoreflect.ValueOfString("")
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table":
		value := &v1.TableDescriptor{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton":
		value := &v1.SingletonDescriptor{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord"))
		}
		panic(fmt.Errorf("message cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.desc":
		if x.Desc == nil {
			return nil
		}
		switch x.Desc.(type) {
		case *ModuleSchemaRecord_TableRecord_Table:
			return x.Descriptor().Fields().ByName("table")
		case *ModuleSchemaRecord_TableRecord_Singleton:
			return x.Descriptor().Fields().ByName("singleton")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ModuleSchemaRecord_TableRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ModuleSchemaRecord_TableRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.ProtoMsgName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		switch x := x.Desc.(type) {
		case *ModuleSchemaRecord_TableRecord_Table:
			if x == nil {
				break
			}
			l = options.Size(x.Table)
			n += 1 + l + runtime.Sov(uint64(l))
		case *ModuleSchemaRecord_TableRecord_Singleton:
			if x == nil {
				break
			}
			l = options.Size(x.Singleton)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ModuleSchemaRecord_TableRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Desc.(type) {
		case *ModuleSchemaRecord_TableRecord_Table:
			encoded, err := options.Marshal(x.Table)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		case *ModuleSchemaRecord_TableRecord_Singleton:
			encoded, err := options.Marshal(x.Singleton)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProtoMsgName) > 0 {
			i -= len(x.ProtoMsgName)
			copy(dAtA[i:], x.ProtoMsgName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProtoMsgName)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ModuleSchemaRecord_TableRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ModuleSchemaRecord_TableRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ModuleSchemaRecord_TableRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtoMsgName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProtoMsgName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Table", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &v1.TableDescriptor{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Desc = &ModuleSchemaRecord_TableRecord_Table{v}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Singleton", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &v1.SingletonDescriptor{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Desc = &ModuleSchemaRecord_TableRecord_Singleton{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cosmos/orm/v1alpha1/internal.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModuleSchemaRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64                           `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Files   []*ModuleSchemaRecord_FileRecord `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ModuleSchemaRecord) Reset() {
	*x = ModuleSchemaRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_orm_v1alpha1_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleSchemaRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleSchemaRecord) ProtoMessage() {}

// Deprecated: Use ModuleSchemaRecord.ProtoReflect.Descriptor instead.
func (*ModuleSchemaRecord) Descriptor() ([]byte, []int) {
	return file_cosmos_orm_v1alpha1_internal_proto_rawDescGZIP(), []int{0}
}

func (x *ModuleSchemaRecord) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ModuleSchemaRecord) GetFiles() []*ModuleSchemaRecord_FileRecord {
	if x != nil {
		return x.Files
	}
	return nil
}

type ModuleSchemaRecord_FileRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProtoFilePath string                            `protobuf:"bytes,2,opt,name=proto_file_path,json=protoFilePath,proto3" json:"proto_file_path,omitempty"`
	Tables        []*ModuleSchemaRecord_TableRecord `protobuf:"bytes,3,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ModuleSchemaRecord_FileRecord) Reset() {
	*x = ModuleSchemaRecord_FileRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_orm_v1alpha1_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleSchemaRecord_FileRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleSchemaRecord_FileRecord) ProtoMessage() {}

// Deprecated: Use ModuleSchemaRecord_FileRecord.ProtoReflect.Descriptor instead.
func (*ModuleSchemaRecord_FileRecord) Descriptor() ([]byte, []int) {
	return file_cosmos_orm_v1alpha1_internal_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ModuleSchemaRecord_FileRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModuleSchemaRecord_FileRecord) GetProtoFilePath() string {
	if x != nil {
		return x.ProtoFilePath
	}
	return ""
}

func (x *ModuleSchemaRecord_FileRecord) GetTables() []*ModuleSchemaRecord_TableRecord {
	if x != nil {
		return x.Tables
	}
	return nil
}

type ModuleSchemaRecord_TableRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProtoMsgName string `protobuf:"bytes,2,opt,name=proto_msg_name,json=protoMsgName,proto3" json:"proto_msg_name,omitempty"`
	// Types that are assignable to Desc:
	//
	//	*ModuleSchemaRecord_TableRecord_Table
	//	*ModuleSchemaRecord_TableRecord_Singleton
	Desc isModuleSchemaRecord_TableRecord_Desc `protobuf_oneof:"desc"`
}

func (x *ModuleSchemaRecord_TableRecord) Reset() {
	*x = ModuleSchemaRecord_TableRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_orm_v1alpha1_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleSchemaRecord_TableRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleSchemaRecord_TableRecord) ProtoMessage() {}

// Deprecated: Use ModuleSchemaRecord_TableRecord.ProtoReflect.Descriptor instead.
func (*ModuleSchemaRecord_TableRecord) Descriptor() ([]byte, []int) {
	return file_cosmos_orm_v1alpha1_internal_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ModuleSchemaRecord_TableRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModuleSchemaRecord_TableRecord) GetProtoMsgName() string {
	if x != nil {
		return x.ProtoMsgName
	}
	return ""
}

func (x *ModuleSchemaRecord_TableRecord) GetDesc() isModuleSchemaRecord_TableRecord_Desc {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ModuleSchemaRecord_TableRecord) GetTable() *v1.TableDescriptor {
	if x, ok := x.GetDesc().(*ModuleSchemaRecord_TableRecord_Table); ok {
		return x.Table
	}
	return nil
}

func (x *ModuleSchemaRecord_TableRecord) GetSingleton() *v1.SingletonDescriptor {
	if x, ok := x.GetDesc().(*ModuleSchemaRecord_TableRecord_Singleton); ok {
		return x.Singleton
	}
	return nil
}

type isModuleSchemaRecord_TableRecord_Desc interface {
	isModuleSchemaRecord_TableRecord_Desc()
}

type ModuleSchemaRecord_TableRecord_Table struct {
	Table *v1.TableDescriptor `protobuf:"bytes,3,opt,name=table,proto3,oneof"`
}

type ModuleSchemaRecord_TableRecord_Singleton struct {
	Singleton *v1.SingletonDescriptor `protobuf:"bytes,4,opt,name=singleton,proto3,oneof"`
}

func (*ModuleSchemaRecord_TableRecord_Table) isModuleSchemaRecord_TableRecord_Desc() {}

func (*ModuleSchemaRecord_TableRecord_Singleton) isModuleSchemaRecord_TableRecord_Desc() {}

var File_cosmos_orm_v1alpha1_internal_proto protoreflect.FileDescriptor

var file_cosmos_orm_v1alpha1_internal_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd6, 0x03, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x91, 0x01,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x4b, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x1a, 0xc7, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x73, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x42, 0x0a, 0x09, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x42, 0xc8, 0x01, 0x0a, 0x17,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x6f,
	0x72, 0x6d, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x4f, 0x58,
	0xaa, 0x02, 0x13, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x6d, 0x2e, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x13, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c,
	0x4f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1f, 0x43,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x4f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x15, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x4f, 0x72, 0x6d, 0x3a, 0x3a, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmos_orm_v1alpha1_internal_proto_rawDescOnce sync.Once
	file_cosmos_orm_v1alpha1_internal_proto_rawDescData = file_cosmos_orm_v1alpha1_internal_proto_rawDesc
)

func file_cosmos_orm_v1alpha1_internal_proto_rawDescGZIP() []byte {
	file_cosmos_orm_v1alpha1_internal_proto_rawDescOnce.Do(func() {
		file_cosmos_orm_v1alpha1_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_orm_v1alpha1_internal_proto_rawDescData)
	})
	return file_cosmos_orm_v1alpha1_internal_proto_rawDescData
}

var file_cosmos_orm_v1alpha1_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cosmos_orm_v1alpha1_internal_proto_goTypes = []interface{}{
	(*ModuleSchemaRecord)(nil),             // 0: cosmos.orm.v1alpha1.ModuleSchemaRecord
	(*ModuleSchemaRecord_FileRecord)(nil),  // 1: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord
	(*ModuleSchemaRecord_TableRecord)(nil), // 2: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord
	(*v1.TableDescriptor)(nil),             // 3: cosmos.orm.v1.TableDescriptor
	(*v1.SingletonDescriptor)(nil),         // 4: cosmos.orm.v1.SingletonDescriptor
}
var file_cosmos_orm_v1alpha1_internal_proto_depIdxs = []int32{
	1, // 0: cosmos.orm.v1alpha1.ModuleSchemaRecord.files:type_name -> cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord
	2, // 1: cosmos.orm.v1alpha1.ModuleSchemaRecord.FileRecord.tables:type_name -> cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord
	3, // 2: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.table:type_name -> cosmos.orm.v1.TableDescriptor
	4, // 3: cosmos.orm.v1alpha1.ModuleSchemaRecord.TableRecord.singleton:type_name -> cosmos.orm.v1.SingletonDescriptor
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cosmos_orm_v1alpha1_internal_proto_init() }
func file_cosmos_orm_v1alpha1_internal_proto_init() {
	if File_cosmos_orm_v1alpha1_internal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmos_orm_v1alpha1_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleSchemaRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_orm_v1alpha1_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleSchemaRecord_FileRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_orm_v1alpha1_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleSchemaRecord_TableRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cosmos_orm_v1alpha1_internal_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ModuleSchemaRecord_TableRecord_Table)(nil),
		(*ModuleSchemaRecord_TableRecord_Singleton)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_orm_v1alpha1_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_orm_v1alpha1_internal_proto_goTypes,
		DependencyIndexes: file_cosmos_orm_v1alpha1_internal_proto_depIdxs,
		MessageInfos:      file_cosmos_orm_v1alpha1_internal_proto_msgTypes,
	}.Build()
	File_cosmos_orm_v1alpha1_internal_proto = out.File
	file_cosmos_orm_v1alpha1_internal_proto_rawDesc = nil
	file_cosmos_orm_v1alpha1_internal_proto_goTypes = nil
	file_cosmos_orm_v1alpha1_internal_proto_depIdxs = nil
}
